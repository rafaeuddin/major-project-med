{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrafa\\\\OneDrive\\\\Desktop\\\\code\\\\major project\\\\src\\\\pages\\\\AddFoodLog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaSearch, FaInfoCircle } from 'react-icons/fa';\nimport { useAuth } from '../context/AuthContext';\nimport openAIService from '../services/OpenAIService';\nimport '../styles/AddFoodLog.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddFoodLog = () => {\n  _s();\n  const {\n    currentUser,\n    authFetch\n  } = useAuth();\n  const navigate = useNavigate();\n  const [foodItems, setFoodItems] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [selectedFoodItems, setSelectedFoodItems] = useState([]);\n  const [formData, setFormData] = useState({\n    date: new Date().toISOString().split('T')[0],\n    mealType: 'breakfast',\n    notes: '',\n    waterIntake: 0\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [manualEntryMode, setManualEntryMode] = useState(false);\n  const [aiMealAnalysis, setAiMealAnalysis] = useState(false);\n  const [mealDescription, setMealDescription] = useState('');\n  const [isAnalyzingMeal, setIsAnalyzingMeal] = useState(false);\n\n  // Redirect if not logged in or not a patient\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    if (currentUser.role !== 'patient') {\n      navigate('/');\n    }\n  }, [currentUser, navigate]);\n\n  // Search for food items with OpenAI\n  useEffect(() => {\n    const searchFoodItems = async () => {\n      if (searchTerm.trim().length < 2) {\n        setSearchResults([]);\n        return;\n      }\n      setIsSearching(true);\n      try {\n        // Use OpenAI service for food search\n        const foodData = await openAIService.getFoodNutritionData(searchTerm);\n        if (foodData) {\n          // Format the response to match our food item structure\n          const formattedResult = {\n            id: `ai-food-${Date.now()}`,\n            name: foodData.foodName,\n            brand: foodData.brand || 'Generic',\n            calories: foodData.calories,\n            proteins: foodData.proteins,\n            carbs: foodData.carbs,\n            fats: foodData.fats,\n            servingUnit: foodData.servingUnit,\n            servingSize: foodData.servingSize,\n            healthTip: foodData.healthTip\n          };\n          setSearchResults([formattedResult]);\n        } else {\n          setSearchResults([]);\n        }\n      } catch (error) {\n        console.error('Error searching food items:', error);\n        setError('Error searching food items. Please try again.');\n        setSearchResults([]);\n      } finally {\n        setIsSearching(false);\n      }\n    };\n    const debounceTimer = setTimeout(() => {\n      if (searchTerm.trim()) {\n        searchFoodItems();\n      }\n    }, 300);\n    return () => clearTimeout(debounceTimer);\n  }, [searchTerm]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleMealDescriptionChange = e => {\n    setMealDescription(e.target.value);\n  };\n  const addFoodItem = item => {\n    // Add with default serving size of 1\n    setSelectedFoodItems(prev => [...prev, {\n      ...item,\n      servingSize: 1\n    }]);\n\n    // Clear search results\n    setSearchTerm('');\n    setSearchResults([]);\n  };\n  const updateServingSize = (index, newSize) => {\n    const updatedItems = [...selectedFoodItems];\n    updatedItems[index].servingSize = newSize;\n    setSelectedFoodItems(updatedItems);\n  };\n  const removeFoodItem = index => {\n    setSelectedFoodItems(prev => prev.filter((_, i) => i !== index));\n  };\n  const calculateTotals = () => {\n    return selectedFoodItems.reduce((totals, item) => {\n      totals.calories += item.calories * item.servingSize || 0;\n      totals.proteins += item.proteins * item.servingSize || 0;\n      totals.carbs += item.carbs * item.servingSize || 0;\n      totals.fats += item.fats * item.servingSize || 0;\n      return totals;\n    }, {\n      calories: 0,\n      proteins: 0,\n      carbs: 0,\n      fats: 0\n    });\n  };\n  const analyzeMeal = async () => {\n    if (!mealDescription.trim()) {\n      setError('Please enter a meal description');\n      return;\n    }\n    setIsAnalyzingMeal(true);\n    setError('');\n    try {\n      const analysisResult = await openAIService.analyzeMealNutrition(mealDescription);\n      if (analysisResult && analysisResult.foods) {\n        // Convert the analyzed foods to our food item format\n        const analyzedFoodItems = analysisResult.foods.map((food, index) => ({\n          id: `ai-analyzed-${index}`,\n          name: food.name,\n          brand: 'AI Analysis',\n          calories: food.calories,\n          proteins: food.proteins,\n          carbs: food.carbs,\n          fats: food.fats,\n          servingUnit: 'serving',\n          servingSize: 1,\n          healthTip: analysisResult.healthTip\n        }));\n\n        // Add the analyzed items to selected items\n        setSelectedFoodItems(prev => [...prev, ...analyzedFoodItems]);\n\n        // Show the health tip if available\n        if (analysisResult.healthTip) {\n          setSuccess(analysisResult.healthTip);\n          setTimeout(() => setSuccess(''), 5000);\n        }\n\n        // Clear the meal description\n        setMealDescription('');\n\n        // Toggle back to regular mode\n        setAiMealAnalysis(false);\n      }\n    } catch (error) {\n      console.error('Error analyzing meal:', error);\n      setError('Failed to analyze meal. Please try again or add foods manually.');\n    } finally {\n      setIsAnalyzingMeal(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (selectedFoodItems.length === 0) {\n      setError('Please add at least one food item');\n      return;\n    }\n    setIsSubmitting(true);\n    setError('');\n    try {\n      const totals = calculateTotals();\n      const foodLogData = {\n        ...formData,\n        foods: selectedFoodItems.map(item => ({\n          foodItem: item.id,\n          foodName: item.name,\n          brand: item.brand,\n          servingSize: item.servingSize,\n          servingUnit: item.servingUnit,\n          calories: item.calories * item.servingSize,\n          proteins: item.proteins * item.servingSize,\n          carbs: item.carbs * item.servingSize,\n          fats: item.fats * item.servingSize\n        })),\n        totalCalories: totals.calories,\n        totalProteins: totals.proteins,\n        totalCarbs: totals.carbs,\n        totalFats: totals.fats\n      };\n\n      // For demo purposes, we'll just simulate a successful submission\n      setTimeout(() => {\n        setSuccess('Food log saved successfully!');\n        setSelectedFoodItems([]);\n        setFormData({\n          date: new Date().toISOString().split('T')[0],\n          mealType: 'breakfast',\n          notes: '',\n          waterIntake: 0\n        });\n        setIsSubmitting(false);\n\n        // Redirect after a delay\n        setTimeout(() => {\n          navigate('/patient-dashboard');\n        }, 1500);\n      }, 1000);\n\n      /* In a real application, uncomment this code to make actual API calls\r\n      const response = await authFetch('/api/food/logs', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(foodLogData),\r\n      });\r\n        if (response.ok) {\r\n        setSuccess('Food log saved successfully!');\r\n        setSelectedFoodItems([]);\r\n        setFormData({\r\n          date: new Date().toISOString().split('T')[0],\r\n          mealType: 'breakfast',\r\n          notes: '',\r\n          waterIntake: 0\r\n        });\r\n        \r\n        // Redirect after a delay\r\n        setTimeout(() => {\r\n          navigate('/patient-dashboard');\r\n        }, 1500);\r\n      } else {\r\n        const data = await response.json();\r\n        setError(data.message || 'Failed to save food log');\r\n      }\r\n      */\n    } catch (error) {\n      console.error('Error saving food log:', error);\n      setError('Error saving food log. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-food-log-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate('/patient-dashboard'),\n        children: \"\\u2190 Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-log-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food-log-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Food Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-toggle-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `toggle-button ${!aiMealAnalysis ? 'active' : ''}`,\n            onClick: () => setAiMealAnalysis(false),\n            children: \"Search Foods\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `toggle-button ${aiMealAnalysis ? 'active' : ''}`,\n            onClick: () => setAiMealAnalysis(true),\n            children: \"AI Meal Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"food-log-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"date\",\n              name: \"date\",\n              value: formData.date,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"mealType\",\n              children: \"Meal Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"mealType\",\n              name: \"mealType\",\n              value: formData.mealType,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"breakfast\",\n                children: \"Breakfast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"lunch\",\n                children: \"Lunch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"dinner\",\n                children: \"Dinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"snack\",\n                children: \"Snack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group water-intake\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"waterIntake\",\n            children: \"Water Intake (ml)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"waterIntake\",\n            name: \"waterIntake\",\n            min: \"0\",\n            step: \"50\",\n            value: formData.waterIntake,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), !aiMealAnalysis ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"food-search-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add Food Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search for food items (e.g., 'apple', 'chicken breast')...\",\n              value: searchTerm,\n              onChange: handleSearchChange,\n              className: \"food-search-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-results\",\n            children: searchResults.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"food-item-result\",\n              onClick: () => addFoodItem(item),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"food-item-name\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"food-item-brand\",\n                  children: item.brand\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"food-item-nutrition\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"food-calories\",\n                  children: [item.calories, \" kcal\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"food-serving\",\n                  children: item.servingUnit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 23\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, this), searchTerm && searchResults.length === 0 && !isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-results\",\n            children: \"No food items found. Try a different search term.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-meal-analysis-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Analyze Entire Meal with AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-description-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"meal-description-input\",\n              placeholder: \"Describe your entire meal (e.g., 'I had 1 cup of brown rice, a grilled chicken breast, and steamed broccoli')...\",\n              value: mealDescription,\n              onChange: handleMealDescriptionChange,\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"analyze-meal-button\",\n              onClick: analyzeMeal,\n              disabled: isAnalyzingMeal || !mealDescription.trim(),\n              children: isAnalyzingMeal ? 'Analyzing...' : 'Analyze Meal'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), selectedFoodItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-foods-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Selected Food Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-foods-list\",\n            children: selectedFoodItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-food-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"food-item-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"food-name\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 23\n                }, this), item.healthTip && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"health-tip-icon\",\n                  title: item.healthTip,\n                  children: \"\\uD83D\\uDCA1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"serving-control\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Servings:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0.25\",\n                    step: \"0.25\",\n                    value: item.servingSize,\n                    onChange: e => updateServingSize(index, parseFloat(e.target.value))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"serving-unit\",\n                    children: item.servingUnit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"food-nutrition\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"nutrition-value\",\n                  children: [Math.round(item.calories * item.servingSize), \" kcal\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"nutrition-value\",\n                  children: [(item.proteins * item.servingSize).toFixed(1), \"g protein\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"nutrition-value\",\n                  children: [(item.carbs * item.servingSize).toFixed(1), \"g carbs\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"nutrition-value\",\n                  children: [(item.fats * item.servingSize).toFixed(1), \"g fat\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"remove-food-btn\",\n                onClick: () => removeFoodItem(index),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nutrition-totals\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Meal Totals:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"totals-values\",\n              children: (() => {\n                const totals = calculateTotals();\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"total-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-label\",\n                      children: \"Calories:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-value\",\n                      children: [Math.round(totals.calories), \" kcal\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 454,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"total-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-label\",\n                      children: \"Protein:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-value\",\n                      children: [totals.proteins.toFixed(1), \"g\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"total-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-label\",\n                      children: \"Carbs:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-value\",\n                      children: [totals.carbs.toFixed(1), \"g\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"total-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-label\",\n                      children: \"Fat:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-value\",\n                      children: [totals.fats.toFixed(1), \"g\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 466,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true);\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"notes\",\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"notes\",\n            name: \"notes\",\n            value: formData.notes,\n            onChange: handleInputChange,\n            placeholder: \"Add any notes about this meal...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancel-button\",\n            onClick: () => navigate('/patient-dashboard'),\n            disabled: isSubmitting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            disabled: isSubmitting || selectedFoodItems.length === 0,\n            children: isSubmitting ? 'Saving...' : 'Save Food Log'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(AddFoodLog, \"txQmGGRZiaw4bYTj57kw9cKK8xc=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AddFoodLog;\nexport default AddFoodLog;\nvar _c;\n$RefreshReg$(_c, \"AddFoodLog\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FaArrowLeft","FaSearch","FaInfoCircle","useAuth","openAIService","jsxDEV","_jsxDEV","Fragment","_Fragment","AddFoodLog","_s","currentUser","authFetch","navigate","foodItems","setFoodItems","searchTerm","setSearchTerm","searchResults","setSearchResults","isSearching","setIsSearching","selectedFoodItems","setSelectedFoodItems","formData","setFormData","date","Date","toISOString","split","mealType","notes","waterIntake","isSubmitting","setIsSubmitting","error","setError","success","setSuccess","manualEntryMode","setManualEntryMode","aiMealAnalysis","setAiMealAnalysis","mealDescription","setMealDescription","isAnalyzingMeal","setIsAnalyzingMeal","role","searchFoodItems","trim","length","foodData","getFoodNutritionData","formattedResult","id","now","name","foodName","brand","calories","proteins","carbs","fats","servingUnit","servingSize","healthTip","console","debounceTimer","setTimeout","clearTimeout","handleInputChange","e","value","target","prev","handleSearchChange","handleMealDescriptionChange","addFoodItem","item","updateServingSize","index","newSize","updatedItems","removeFoodItem","filter","_","i","calculateTotals","reduce","totals","analyzeMeal","analysisResult","analyzeMealNutrition","foods","analyzedFoodItems","map","food","handleSubmit","preventDefault","foodLogData","foodItem","totalCalories","totalProteins","totalCarbs","totalFats","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","min","step","placeholder","rows","disabled","title","parseFloat","Math","round","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/pages/AddFoodLog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaArrowLeft, FaSearch, FaInfoCircle } from 'react-icons/fa';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport openAIService from '../services/OpenAIService';\r\nimport '../styles/AddFoodLog.css';\r\n\r\nconst AddFoodLog = () => {\r\n  const { currentUser, authFetch } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [foodItems, setFoodItems] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [selectedFoodItems, setSelectedFoodItems] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    date: new Date().toISOString().split('T')[0],\r\n    mealType: 'breakfast',\r\n    notes: '',\r\n    waterIntake: 0\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [manualEntryMode, setManualEntryMode] = useState(false);\r\n  const [aiMealAnalysis, setAiMealAnalysis] = useState(false);\r\n  const [mealDescription, setMealDescription] = useState('');\r\n  const [isAnalyzingMeal, setIsAnalyzingMeal] = useState(false);\r\n\r\n  // Redirect if not logged in or not a patient\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      return;\r\n    }\r\n    \r\n    if (currentUser.role !== 'patient') {\r\n      navigate('/');\r\n    }\r\n  }, [currentUser, navigate]);\r\n\r\n  // Search for food items with OpenAI\r\n  useEffect(() => {\r\n    const searchFoodItems = async () => {\r\n      if (searchTerm.trim().length < 2) {\r\n        setSearchResults([]);\r\n        return;\r\n      }\r\n\r\n      setIsSearching(true);\r\n      try {\r\n        // Use OpenAI service for food search\r\n        const foodData = await openAIService.getFoodNutritionData(searchTerm);\r\n        \r\n        if (foodData) {\r\n          // Format the response to match our food item structure\r\n          const formattedResult = {\r\n            id: `ai-food-${Date.now()}`,\r\n            name: foodData.foodName,\r\n            brand: foodData.brand || 'Generic',\r\n            calories: foodData.calories,\r\n            proteins: foodData.proteins,\r\n            carbs: foodData.carbs,\r\n            fats: foodData.fats,\r\n            servingUnit: foodData.servingUnit,\r\n            servingSize: foodData.servingSize,\r\n            healthTip: foodData.healthTip\r\n          };\r\n          \r\n          setSearchResults([formattedResult]);\r\n        } else {\r\n          setSearchResults([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error searching food items:', error);\r\n        setError('Error searching food items. Please try again.');\r\n        setSearchResults([]);\r\n      } finally {\r\n        setIsSearching(false);\r\n      }\r\n    };\r\n\r\n    const debounceTimer = setTimeout(() => {\r\n      if (searchTerm.trim()) {\r\n        searchFoodItems();\r\n      }\r\n    }, 300);\r\n\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [searchTerm]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleMealDescriptionChange = (e) => {\r\n    setMealDescription(e.target.value);\r\n  };\r\n\r\n  const addFoodItem = (item) => {\r\n    // Add with default serving size of 1\r\n    setSelectedFoodItems(prev => [\r\n      ...prev, \r\n      { ...item, servingSize: 1 }\r\n    ]);\r\n    \r\n    // Clear search results\r\n    setSearchTerm('');\r\n    setSearchResults([]);\r\n  };\r\n\r\n  const updateServingSize = (index, newSize) => {\r\n    const updatedItems = [...selectedFoodItems];\r\n    updatedItems[index].servingSize = newSize;\r\n    setSelectedFoodItems(updatedItems);\r\n  };\r\n\r\n  const removeFoodItem = (index) => {\r\n    setSelectedFoodItems(prev => \r\n      prev.filter((_, i) => i !== index)\r\n    );\r\n  };\r\n\r\n  const calculateTotals = () => {\r\n    return selectedFoodItems.reduce((totals, item) => {\r\n      totals.calories += (item.calories * item.servingSize) || 0;\r\n      totals.proteins += (item.proteins * item.servingSize) || 0;\r\n      totals.carbs += (item.carbs * item.servingSize) || 0;\r\n      totals.fats += (item.fats * item.servingSize) || 0;\r\n      return totals;\r\n    }, { calories: 0, proteins: 0, carbs: 0, fats: 0 });\r\n  };\r\n\r\n  const analyzeMeal = async () => {\r\n    if (!mealDescription.trim()) {\r\n      setError('Please enter a meal description');\r\n      return;\r\n    }\r\n    \r\n    setIsAnalyzingMeal(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const analysisResult = await openAIService.analyzeMealNutrition(mealDescription);\r\n      \r\n      if (analysisResult && analysisResult.foods) {\r\n        // Convert the analyzed foods to our food item format\r\n        const analyzedFoodItems = analysisResult.foods.map((food, index) => ({\r\n          id: `ai-analyzed-${index}`,\r\n          name: food.name,\r\n          brand: 'AI Analysis',\r\n          calories: food.calories,\r\n          proteins: food.proteins,\r\n          carbs: food.carbs,\r\n          fats: food.fats,\r\n          servingUnit: 'serving',\r\n          servingSize: 1,\r\n          healthTip: analysisResult.healthTip\r\n        }));\r\n        \r\n        // Add the analyzed items to selected items\r\n        setSelectedFoodItems(prev => [...prev, ...analyzedFoodItems]);\r\n        \r\n        // Show the health tip if available\r\n        if (analysisResult.healthTip) {\r\n          setSuccess(analysisResult.healthTip);\r\n          setTimeout(() => setSuccess(''), 5000);\r\n        }\r\n        \r\n        // Clear the meal description\r\n        setMealDescription('');\r\n        \r\n        // Toggle back to regular mode\r\n        setAiMealAnalysis(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error analyzing meal:', error);\r\n      setError('Failed to analyze meal. Please try again or add foods manually.');\r\n    } finally {\r\n      setIsAnalyzingMeal(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (selectedFoodItems.length === 0) {\r\n      setError('Please add at least one food item');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const totals = calculateTotals();\r\n      \r\n      const foodLogData = {\r\n        ...formData,\r\n        foods: selectedFoodItems.map(item => ({\r\n          foodItem: item.id,\r\n          foodName: item.name,\r\n          brand: item.brand,\r\n          servingSize: item.servingSize,\r\n          servingUnit: item.servingUnit,\r\n          calories: item.calories * item.servingSize,\r\n          proteins: item.proteins * item.servingSize,\r\n          carbs: item.carbs * item.servingSize,\r\n          fats: item.fats * item.servingSize\r\n        })),\r\n        totalCalories: totals.calories,\r\n        totalProteins: totals.proteins,\r\n        totalCarbs: totals.carbs,\r\n        totalFats: totals.fats\r\n      };\r\n      \r\n      // For demo purposes, we'll just simulate a successful submission\r\n      setTimeout(() => {\r\n        setSuccess('Food log saved successfully!');\r\n        setSelectedFoodItems([]);\r\n        setFormData({\r\n          date: new Date().toISOString().split('T')[0],\r\n          mealType: 'breakfast',\r\n          notes: '',\r\n          waterIntake: 0\r\n        });\r\n        setIsSubmitting(false);\r\n        \r\n        // Redirect after a delay\r\n        setTimeout(() => {\r\n          navigate('/patient-dashboard');\r\n        }, 1500);\r\n      }, 1000);\r\n\r\n      /* In a real application, uncomment this code to make actual API calls\r\n      const response = await authFetch('/api/food/logs', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(foodLogData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSuccess('Food log saved successfully!');\r\n        setSelectedFoodItems([]);\r\n        setFormData({\r\n          date: new Date().toISOString().split('T')[0],\r\n          mealType: 'breakfast',\r\n          notes: '',\r\n          waterIntake: 0\r\n        });\r\n        \r\n        // Redirect after a delay\r\n        setTimeout(() => {\r\n          navigate('/patient-dashboard');\r\n        }, 1500);\r\n      } else {\r\n        const data = await response.json();\r\n        setError(data.message || 'Failed to save food log');\r\n      }\r\n      */\r\n    } catch (error) {\r\n      console.error('Error saving food log:', error);\r\n      setError('Error saving food log. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-food-log-page\">\r\n      <div className=\"back-button-container\">\r\n        <button className=\"back-button\" onClick={() => navigate('/patient-dashboard')}>\r\n          ← Back to Dashboard\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"food-log-container\">\r\n        <div className=\"food-log-header\">\r\n          <h1>Add Food Log</h1>\r\n          <div className=\"ai-toggle-buttons\">\r\n            <button \r\n              className={`toggle-button ${!aiMealAnalysis ? 'active' : ''}`} \r\n              onClick={() => setAiMealAnalysis(false)}\r\n            >\r\n              Search Foods\r\n            </button>\r\n            <button \r\n              className={`toggle-button ${aiMealAnalysis ? 'active' : ''}`} \r\n              onClick={() => setAiMealAnalysis(true)}\r\n            >\r\n              AI Meal Analysis\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n        \r\n        <form onSubmit={handleSubmit} className=\"food-log-form\">\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"date\">Date</label>\r\n              <input \r\n                type=\"date\" \r\n                id=\"date\" \r\n                name=\"date\" \r\n                value={formData.date} \r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"mealType\">Meal Type</label>\r\n              <select \r\n                id=\"mealType\" \r\n                name=\"mealType\" \r\n                value={formData.mealType} \r\n                onChange={handleInputChange}\r\n                required\r\n              >\r\n                <option value=\"breakfast\">Breakfast</option>\r\n                <option value=\"lunch\">Lunch</option>\r\n                <option value=\"dinner\">Dinner</option>\r\n                <option value=\"snack\">Snack</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"form-group water-intake\">\r\n            <label htmlFor=\"waterIntake\">Water Intake (ml)</label>\r\n            <input \r\n              type=\"number\" \r\n              id=\"waterIntake\" \r\n              name=\"waterIntake\" \r\n              min=\"0\" \r\n              step=\"50\"\r\n              value={formData.waterIntake} \r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          \r\n          {!aiMealAnalysis ? (\r\n            <div className=\"food-search-section\">\r\n              <h3>Add Food Items</h3>\r\n              <div className=\"search-container\">\r\n                <input \r\n                  type=\"text\" \r\n                  placeholder=\"Search for food items (e.g., 'apple', 'chicken breast')...\" \r\n                  value={searchTerm} \r\n                  onChange={handleSearchChange}\r\n                  className=\"food-search-input\"\r\n                />\r\n                {isSearching && <div className=\"search-spinner\"></div>}\r\n              </div>\r\n              \r\n              {searchResults.length > 0 && (\r\n                <div className=\"search-results\">\r\n                  {searchResults.map(item => (\r\n                    <div key={item.id} className=\"food-item-result\" onClick={() => addFoodItem(item)}>\r\n                      <div className=\"food-item-name\">\r\n                        <strong>{item.name}</strong>\r\n                        <span className=\"food-item-brand\">{item.brand}</span>\r\n                      </div>\r\n                      <div className=\"food-item-nutrition\">\r\n                        <span className=\"food-calories\">{item.calories} kcal</span>\r\n                        <span className=\"food-serving\">{item.servingUnit}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              \r\n              {searchTerm && searchResults.length === 0 && !isSearching && (\r\n                <div className=\"no-results\">No food items found. Try a different search term.</div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"ai-meal-analysis-section\">\r\n              <h3>Analyze Entire Meal with AI</h3>\r\n              <div className=\"meal-description-container\">\r\n                <textarea\r\n                  className=\"meal-description-input\"\r\n                  placeholder=\"Describe your entire meal (e.g., 'I had 1 cup of brown rice, a grilled chicken breast, and steamed broccoli')...\"\r\n                  value={mealDescription}\r\n                  onChange={handleMealDescriptionChange}\r\n                  rows={4}\r\n                ></textarea>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"analyze-meal-button\"\r\n                  onClick={analyzeMeal}\r\n                  disabled={isAnalyzingMeal || !mealDescription.trim()}\r\n                >\r\n                  {isAnalyzingMeal ? 'Analyzing...' : 'Analyze Meal'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {selectedFoodItems.length > 0 && (\r\n            <div className=\"selected-foods-section\">\r\n              <h3>Selected Food Items</h3>\r\n              <div className=\"selected-foods-list\">\r\n                {selectedFoodItems.map((item, index) => (\r\n                  <div key={index} className=\"selected-food-item\">\r\n                    <div className=\"food-item-info\">\r\n                      <span className=\"food-name\">{item.name}</span>\r\n                      {item.healthTip && (\r\n                        <span className=\"health-tip-icon\" title={item.healthTip}>💡</span>\r\n                      )}\r\n                      <div className=\"serving-control\">\r\n                        <label>Servings:</label>\r\n                        <input \r\n                          type=\"number\" \r\n                          min=\"0.25\" \r\n                          step=\"0.25\" \r\n                          value={item.servingSize} \r\n                          onChange={(e) => updateServingSize(index, parseFloat(e.target.value))}\r\n                        />\r\n                        <span className=\"serving-unit\">{item.servingUnit}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"food-nutrition\">\r\n                      <span className=\"nutrition-value\">{Math.round(item.calories * item.servingSize)} kcal</span>\r\n                      <span className=\"nutrition-value\">{(item.proteins * item.servingSize).toFixed(1)}g protein</span>\r\n                      <span className=\"nutrition-value\">{(item.carbs * item.servingSize).toFixed(1)}g carbs</span>\r\n                      <span className=\"nutrition-value\">{(item.fats * item.servingSize).toFixed(1)}g fat</span>\r\n                    </div>\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"remove-food-btn\" \r\n                      onClick={() => removeFoodItem(index)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"nutrition-totals\">\r\n                <h4>Meal Totals:</h4>\r\n                <div className=\"totals-values\">\r\n                  {(() => {\r\n                    const totals = calculateTotals();\r\n                    return (\r\n                      <>\r\n                        <div className=\"total-item\">\r\n                          <span className=\"total-label\">Calories:</span>\r\n                          <span className=\"total-value\">{Math.round(totals.calories)} kcal</span>\r\n                        </div>\r\n                        <div className=\"total-item\">\r\n                          <span className=\"total-label\">Protein:</span>\r\n                          <span className=\"total-value\">{totals.proteins.toFixed(1)}g</span>\r\n                        </div>\r\n                        <div className=\"total-item\">\r\n                          <span className=\"total-label\">Carbs:</span>\r\n                          <span className=\"total-value\">{totals.carbs.toFixed(1)}g</span>\r\n                        </div>\r\n                        <div className=\"total-item\">\r\n                          <span className=\"total-label\">Fat:</span>\r\n                          <span className=\"total-value\">{totals.fats.toFixed(1)}g</span>\r\n                        </div>\r\n                      </>\r\n                    );\r\n                  })()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"notes\">Notes</label>\r\n            <textarea \r\n              id=\"notes\" \r\n              name=\"notes\" \r\n              value={formData.notes} \r\n              onChange={handleInputChange}\r\n              placeholder=\"Add any notes about this meal...\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              className=\"cancel-button\" \r\n              onClick={() => navigate('/patient-dashboard')}\r\n              disabled={isSubmitting}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              className=\"submit-button\" \r\n              disabled={isSubmitting || selectedFoodItems.length === 0}\r\n            >\r\n              {isSubmitting ? 'Saving...' : 'Save Food Log'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddFoodLog; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}