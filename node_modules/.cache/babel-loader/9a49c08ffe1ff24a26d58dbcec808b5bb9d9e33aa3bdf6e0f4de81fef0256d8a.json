{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrafa\\\\OneDrive\\\\Desktop\\\\code\\\\major project\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  _s();\n  const {\n    currentUser,\n    loading\n  } = useAuth();\n\n  // Show loading indicator while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect to login if user is not authenticated\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check for role access if required\n  if (requiredRole && currentUser.role !== requiredRole) {\n    // Redirect based on actual role\n    if (currentUser.role === 'doctor') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/doctor-dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    } else if (currentUser.role === 'patient') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/patient-dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  // User is authenticated and has the required role (if any)\n  return children;\n};\n_s(ProtectedRoute, \"+loUN5XsQVjYs/gtfuWkb9VBZ7Q=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","_s","currentUser","loading","className","fileName","_jsxFileName","lineNumber","columnNumber","to","role","_c","$RefreshReg$"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, requiredRole }) => {\r\n  const { currentUser, loading } = useAuth();\r\n  \r\n  // Show loading indicator while checking authentication\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n  \r\n  // Redirect to login if user is not authenticated\r\n  if (!currentUser) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n  \r\n  // Check for role access if required\r\n  if (requiredRole && currentUser.role !== requiredRole) {\r\n    // Redirect based on actual role\r\n    if (currentUser.role === 'doctor') {\r\n      return <Navigate to=\"/doctor-dashboard\" />;\r\n    } else if (currentUser.role === 'patient') {\r\n      return <Navigate to=\"/patient-dashboard\" />;\r\n    } else {\r\n      return <Navigate to=\"/dashboard\" />;\r\n    }\r\n  }\r\n  \r\n  // User is authenticated and has the required role (if any)\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM;IAAEC,WAAW;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAAC,CAAC;;EAE1C;EACA,IAAIQ,OAAO,EAAE;IACX,oBAAON,OAAA;MAAKO,SAAS,EAAC,SAAS;MAAAL,QAAA,EAAC;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClD;;EAEA;EACA,IAAI,CAACN,WAAW,EAAE;IAChB,oBAAOL,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,IAAIR,YAAY,IAAIE,WAAW,CAACQ,IAAI,KAAKV,YAAY,EAAE;IACrD;IACA,IAAIE,WAAW,CAACQ,IAAI,KAAK,QAAQ,EAAE;MACjC,oBAAOb,OAAA,CAACH,QAAQ;QAACe,EAAE,EAAC;MAAmB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC5C,CAAC,MAAM,IAAIN,WAAW,CAACQ,IAAI,KAAK,SAAS,EAAE;MACzC,oBAAOb,OAAA,CAACH,QAAQ;QAACe,EAAE,EAAC;MAAoB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC7C,CAAC,MAAM;MACL,oBAAOX,OAAA,CAACH,QAAQ;QAACe,EAAE,EAAC;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACrC;EACF;;EAEA;EACA,OAAOT,QAAQ;AACjB,CAAC;AAACE,EAAA,CA3BIH,cAAc;EAAA,QACeH,OAAO;AAAA;AAAAgB,EAAA,GADpCb,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}