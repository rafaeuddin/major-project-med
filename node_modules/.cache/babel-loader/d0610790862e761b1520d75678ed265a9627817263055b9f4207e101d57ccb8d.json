{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrafa\\\\OneDrive\\\\Desktop\\\\code\\\\major project\\\\src\\\\pages\\\\AddFoodLog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/AddFoodLog.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddFoodLog = () => {\n  _s();\n  const {\n    currentUser,\n    authFetch\n  } = useAuth();\n  const navigate = useNavigate();\n  const [foodItems, setFoodItems] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [selectedFoodItems, setSelectedFoodItems] = useState([]);\n  const [formData, setFormData] = useState({\n    date: new Date().toISOString().split('T')[0],\n    mealType: 'breakfast',\n    notes: '',\n    waterIntake: 0\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Redirect if not logged in or not a patient\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    if (currentUser.role !== 'patient') {\n      navigate('/');\n    }\n  }, [currentUser, navigate]);\n\n  // Search for food items\n  useEffect(() => {\n    const searchFoodItems = async () => {\n      if (searchTerm.trim().length < 2) {\n        setSearchResults([]);\n        return;\n      }\n      setIsSearching(true);\n      try {\n        // For development/demo, we'll simulate an API call with a delay and mock data\n        setTimeout(() => {\n          const mockResults = [{\n            id: '1',\n            name: 'Apple',\n            brand: 'Fresh Fruits',\n            calories: 95,\n            proteins: 0.5,\n            carbs: 25,\n            fats: 0.3,\n            servingUnit: 'medium'\n          }, {\n            id: '2',\n            name: 'Banana',\n            brand: 'Fresh Fruits',\n            calories: 105,\n            proteins: 1.3,\n            carbs: 27,\n            fats: 0.4,\n            servingUnit: 'medium'\n          }, {\n            id: '3',\n            name: 'Chicken Breast',\n            brand: 'Organic Meats',\n            calories: 165,\n            proteins: 31,\n            carbs: 0,\n            fats: 3.6,\n            servingUnit: '100g'\n          }, {\n            id: '4',\n            name: 'Brown Rice',\n            brand: 'Healthy Grains',\n            calories: 216,\n            proteins: 5,\n            carbs: 45,\n            fats: 1.8,\n            servingUnit: 'cup'\n          }, {\n            id: '5',\n            name: 'Salmon',\n            brand: 'Wild Caught',\n            calories: 208,\n            proteins: 20,\n            carbs: 0,\n            fats: 13,\n            servingUnit: '100g'\n          }].filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()) || item.brand.toLowerCase().includes(searchTerm.toLowerCase()));\n          setSearchResults(mockResults);\n          setIsSearching(false);\n        }, 500);\n\n        /* In a real application, uncomment this code to make actual API calls\r\n        const response = await authFetch(`/api/food/items/search?query=${searchTerm}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setSearchResults(data.data);\r\n        } else {\r\n          setError('Failed to search for food items');\r\n          setSearchResults([]);\r\n        }\r\n        */\n      } catch (error) {\n        console.error('Error searching food items:', error);\n        setError('Error searching food items. Please try again.');\n        setSearchResults([]);\n      } finally {\n        setIsSearching(false);\n      }\n    };\n    const debounceTimer = setTimeout(() => {\n      if (searchTerm.trim()) {\n        searchFoodItems();\n      }\n    }, 300);\n    return () => clearTimeout(debounceTimer);\n  }, [searchTerm]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const addFoodItem = item => {\n    // Add with default serving size of 1\n    setSelectedFoodItems(prev => [...prev, {\n      ...item,\n      servingSize: 1\n    }]);\n\n    // Clear search results\n    setSearchTerm('');\n    setSearchResults([]);\n  };\n  const updateServingSize = (index, newSize) => {\n    const updatedItems = [...selectedFoodItems];\n    updatedItems[index].servingSize = newSize;\n    setSelectedFoodItems(updatedItems);\n  };\n  const removeFoodItem = index => {\n    setSelectedFoodItems(prev => prev.filter((_, i) => i !== index));\n  };\n  const calculateTotals = () => {\n    return selectedFoodItems.reduce((totals, item) => {\n      totals.calories += item.calories * item.servingSize || 0;\n      totals.proteins += item.proteins * item.servingSize || 0;\n      totals.carbs += item.carbs * item.servingSize || 0;\n      totals.fats += item.fats * item.servingSize || 0;\n      return totals;\n    }, {\n      calories: 0,\n      proteins: 0,\n      carbs: 0,\n      fats: 0\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (selectedFoodItems.length === 0) {\n      setError('Please add at least one food item');\n      return;\n    }\n    setIsSubmitting(true);\n    setError('');\n    try {\n      const totals = calculateTotals();\n      const foodLogData = {\n        ...formData,\n        foods: selectedFoodItems.map(item => ({\n          foodItem: item.id,\n          servingSize: item.servingSize,\n          calories: item.calories * item.servingSize,\n          proteins: item.proteins * item.servingSize,\n          carbs: item.carbs * item.servingSize,\n          fats: item.fats * item.servingSize\n        })),\n        totalCalories: totals.calories,\n        totalProteins: totals.proteins,\n        totalCarbs: totals.carbs,\n        totalFats: totals.fats\n      };\n\n      // For demo purposes, we'll just simulate a successful submission\n      setTimeout(() => {\n        setSuccess('Food log saved successfully!');\n        setSelectedFoodItems([]);\n        setFormData({\n          date: new Date().toISOString().split('T')[0],\n          mealType: 'breakfast',\n          notes: '',\n          waterIntake: 0\n        });\n        setIsSubmitting(false);\n\n        // Redirect after a delay\n        setTimeout(() => {\n          navigate('/patient-dashboard');\n        }, 1500);\n      }, 1000);\n\n      /* In a real application, uncomment this code to make actual API calls\r\n      const response = await authFetch('/api/food/logs', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(foodLogData),\r\n      });\r\n        if (response.ok) {\r\n        setSuccess('Food log saved successfully!');\r\n        setSelectedFoodItems([]);\r\n        setFormData({\r\n          date: new Date().toISOString().split('T')[0],\r\n          mealType: 'breakfast',\r\n          notes: '',\r\n          waterIntake: 0\r\n        });\r\n        \r\n        // Redirect after a delay\r\n        setTimeout(() => {\r\n          navigate('/patient-dashboard');\r\n        }, 1500);\r\n      } else {\r\n        const data = await response.json();\r\n        setError(data.message || 'Failed to save food log');\r\n      }\r\n      */\n    } catch (error) {\n      console.error('Error saving food log:', error);\n      setError('Error saving food log. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-food-log-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate('/patient-dashboard'),\n        children: \"\\u2190 Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-log-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food-log-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Food Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"food-log-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"date\",\n              name: \"date\",\n              value: formData.date,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"mealType\",\n              children: \"Meal Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"mealType\",\n              name: \"mealType\",\n              value: formData.mealType,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"breakfast\",\n                children: \"Breakfast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"lunch\",\n                children: \"Lunch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"dinner\",\n                children: \"Dinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"snack\",\n                children: \"Snack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group water-intake\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"waterIntake\",\n            children: \"Water Intake (ml)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"waterIntake\",\n            name: \"waterIntake\",\n            min: \"0\",\n            step: \"50\",\n            value: formData.waterIntake,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"food-search-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add Food Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search for food items...\",\n              value: searchTerm,\n              onChange: handleSearchChange,\n              className: \"food-search-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-results\",\n            children: searchResults.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"food-item-result\",\n              onClick: () => addFoodItem(item),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"food-item-name\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"food-item-brand\",\n                  children: item.brand\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"food-item-nutrition\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"food-calories\",\n                  children: [item.calories, \" kcal\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"food-serving\",\n                  children: item.servingUnit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), searchTerm && searchResults.length === 0 && !isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-results\",\n            children: \"No food items found. Try a different search term.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), selectedFoodItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-foods-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Selected Food Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-foods-list\",\n            children: selectedFoodItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-food-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"food-item-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"food-name\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"serving-control\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Servings:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0.25\",\n                    step: \"0.25\",\n                    value: item.servingSize,\n                    onChange: e => updateServingSize(index, parseFloat(e.target.value))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"serving-unit\",\n                    children: item.servingUnit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"food-nutrition\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"nutrition-value\",\n                  children: [Math.round(item.calories * item.servingSize), \" kcal\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"nutrition-value\",\n                  children: [(item.proteins * item.servingSize).toFixed(1), \"g protein\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"nutrition-value\",\n                  children: [(item.carbs * item.servingSize).toFixed(1), \"g carbs\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"nutrition-value\",\n                  children: [(item.fats * item.servingSize).toFixed(1), \"g fat\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"remove-food-btn\",\n                onClick: () => removeFoodItem(index),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nutrition-totals\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Meal Totals:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"totals-values\",\n              children: (() => {\n                const totals = calculateTotals();\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"total-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-label\",\n                      children: \"Calories:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-value\",\n                      children: [Math.round(totals.calories), \" kcal\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"total-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-label\",\n                      children: \"Protein:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-value\",\n                      children: [totals.proteins.toFixed(1), \"g\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"total-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-label\",\n                      children: \"Carbs:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-value\",\n                      children: [totals.carbs.toFixed(1), \"g\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"total-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-label\",\n                      children: \"Fat:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"total-value\",\n                      children: [totals.fats.toFixed(1), \"g\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true);\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"notes\",\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"notes\",\n            name: \"notes\",\n            value: formData.notes,\n            onChange: handleInputChange,\n            placeholder: \"Add any notes about this meal...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancel-button\",\n            onClick: () => navigate('/patient-dashboard'),\n            disabled: isSubmitting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            disabled: isSubmitting || selectedFoodItems.length === 0,\n            children: isSubmitting ? 'Saving...' : 'Save Food Log'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(AddFoodLog, \"H5eiLB9uME35/Ysud+WHpbckzEE=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AddFoodLog;\nexport default AddFoodLog;\nvar _c;\n$RefreshReg$(_c, \"AddFoodLog\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","AddFoodLog","_s","currentUser","authFetch","navigate","foodItems","setFoodItems","searchTerm","setSearchTerm","searchResults","setSearchResults","isSearching","setIsSearching","selectedFoodItems","setSelectedFoodItems","formData","setFormData","date","Date","toISOString","split","mealType","notes","waterIntake","isSubmitting","setIsSubmitting","error","setError","success","setSuccess","role","searchFoodItems","trim","length","setTimeout","mockResults","id","name","brand","calories","proteins","carbs","fats","servingUnit","filter","item","toLowerCase","includes","console","debounceTimer","clearTimeout","handleInputChange","e","value","target","prev","handleSearchChange","addFoodItem","servingSize","updateServingSize","index","newSize","updatedItems","removeFoodItem","_","i","calculateTotals","reduce","totals","handleSubmit","preventDefault","foodLogData","foods","map","foodItem","totalCalories","totalProteins","totalCarbs","totalFats","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","min","step","placeholder","parseFloat","Math","round","toFixed","disabled","_c","$RefreshReg$"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/pages/AddFoodLog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport '../styles/AddFoodLog.css';\r\n\r\nconst AddFoodLog = () => {\r\n  const { currentUser, authFetch } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [foodItems, setFoodItems] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [selectedFoodItems, setSelectedFoodItems] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    date: new Date().toISOString().split('T')[0],\r\n    mealType: 'breakfast',\r\n    notes: '',\r\n    waterIntake: 0\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  // Redirect if not logged in or not a patient\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      return;\r\n    }\r\n    \r\n    if (currentUser.role !== 'patient') {\r\n      navigate('/');\r\n    }\r\n  }, [currentUser, navigate]);\r\n\r\n  // Search for food items\r\n  useEffect(() => {\r\n    const searchFoodItems = async () => {\r\n      if (searchTerm.trim().length < 2) {\r\n        setSearchResults([]);\r\n        return;\r\n      }\r\n\r\n      setIsSearching(true);\r\n      try {\r\n        // For development/demo, we'll simulate an API call with a delay and mock data\r\n        setTimeout(() => {\r\n          const mockResults = [\r\n            { id: '1', name: 'Apple', brand: 'Fresh Fruits', calories: 95, proteins: 0.5, carbs: 25, fats: 0.3, servingUnit: 'medium' },\r\n            { id: '2', name: 'Banana', brand: 'Fresh Fruits', calories: 105, proteins: 1.3, carbs: 27, fats: 0.4, servingUnit: 'medium' },\r\n            { id: '3', name: 'Chicken Breast', brand: 'Organic Meats', calories: 165, proteins: 31, carbs: 0, fats: 3.6, servingUnit: '100g' },\r\n            { id: '4', name: 'Brown Rice', brand: 'Healthy Grains', calories: 216, proteins: 5, carbs: 45, fats: 1.8, servingUnit: 'cup' },\r\n            { id: '5', name: 'Salmon', brand: 'Wild Caught', calories: 208, proteins: 20, carbs: 0, fats: 13, servingUnit: '100g' },\r\n          ].filter(item => \r\n            item.name.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n            item.brand.toLowerCase().includes(searchTerm.toLowerCase())\r\n          );\r\n          \r\n          setSearchResults(mockResults);\r\n          setIsSearching(false);\r\n        }, 500);\r\n        \r\n        /* In a real application, uncomment this code to make actual API calls\r\n        const response = await authFetch(`/api/food/items/search?query=${searchTerm}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setSearchResults(data.data);\r\n        } else {\r\n          setError('Failed to search for food items');\r\n          setSearchResults([]);\r\n        }\r\n        */\r\n      } catch (error) {\r\n        console.error('Error searching food items:', error);\r\n        setError('Error searching food items. Please try again.');\r\n        setSearchResults([]);\r\n      } finally {\r\n        setIsSearching(false);\r\n      }\r\n    };\r\n\r\n    const debounceTimer = setTimeout(() => {\r\n      if (searchTerm.trim()) {\r\n        searchFoodItems();\r\n      }\r\n    }, 300);\r\n\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [searchTerm]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const addFoodItem = (item) => {\r\n    // Add with default serving size of 1\r\n    setSelectedFoodItems(prev => [\r\n      ...prev, \r\n      { ...item, servingSize: 1 }\r\n    ]);\r\n    \r\n    // Clear search results\r\n    setSearchTerm('');\r\n    setSearchResults([]);\r\n  };\r\n\r\n  const updateServingSize = (index, newSize) => {\r\n    const updatedItems = [...selectedFoodItems];\r\n    updatedItems[index].servingSize = newSize;\r\n    setSelectedFoodItems(updatedItems);\r\n  };\r\n\r\n  const removeFoodItem = (index) => {\r\n    setSelectedFoodItems(prev => \r\n      prev.filter((_, i) => i !== index)\r\n    );\r\n  };\r\n\r\n  const calculateTotals = () => {\r\n    return selectedFoodItems.reduce((totals, item) => {\r\n      totals.calories += (item.calories * item.servingSize) || 0;\r\n      totals.proteins += (item.proteins * item.servingSize) || 0;\r\n      totals.carbs += (item.carbs * item.servingSize) || 0;\r\n      totals.fats += (item.fats * item.servingSize) || 0;\r\n      return totals;\r\n    }, { calories: 0, proteins: 0, carbs: 0, fats: 0 });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (selectedFoodItems.length === 0) {\r\n      setError('Please add at least one food item');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const totals = calculateTotals();\r\n      \r\n      const foodLogData = {\r\n        ...formData,\r\n        foods: selectedFoodItems.map(item => ({\r\n          foodItem: item.id,\r\n          servingSize: item.servingSize,\r\n          calories: item.calories * item.servingSize,\r\n          proteins: item.proteins * item.servingSize,\r\n          carbs: item.carbs * item.servingSize,\r\n          fats: item.fats * item.servingSize\r\n        })),\r\n        totalCalories: totals.calories,\r\n        totalProteins: totals.proteins,\r\n        totalCarbs: totals.carbs,\r\n        totalFats: totals.fats\r\n      };\r\n      \r\n      // For demo purposes, we'll just simulate a successful submission\r\n      setTimeout(() => {\r\n        setSuccess('Food log saved successfully!');\r\n        setSelectedFoodItems([]);\r\n        setFormData({\r\n          date: new Date().toISOString().split('T')[0],\r\n          mealType: 'breakfast',\r\n          notes: '',\r\n          waterIntake: 0\r\n        });\r\n        setIsSubmitting(false);\r\n        \r\n        // Redirect after a delay\r\n        setTimeout(() => {\r\n          navigate('/patient-dashboard');\r\n        }, 1500);\r\n      }, 1000);\r\n\r\n      /* In a real application, uncomment this code to make actual API calls\r\n      const response = await authFetch('/api/food/logs', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(foodLogData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSuccess('Food log saved successfully!');\r\n        setSelectedFoodItems([]);\r\n        setFormData({\r\n          date: new Date().toISOString().split('T')[0],\r\n          mealType: 'breakfast',\r\n          notes: '',\r\n          waterIntake: 0\r\n        });\r\n        \r\n        // Redirect after a delay\r\n        setTimeout(() => {\r\n          navigate('/patient-dashboard');\r\n        }, 1500);\r\n      } else {\r\n        const data = await response.json();\r\n        setError(data.message || 'Failed to save food log');\r\n      }\r\n      */\r\n    } catch (error) {\r\n      console.error('Error saving food log:', error);\r\n      setError('Error saving food log. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-food-log-page\">\r\n      <div className=\"back-button-container\">\r\n        <button className=\"back-button\" onClick={() => navigate('/patient-dashboard')}>\r\n          ← Back to Dashboard\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"food-log-container\">\r\n        <div className=\"food-log-header\">\r\n          <h1>Add Food Log</h1>\r\n        </div>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n        \r\n        <form onSubmit={handleSubmit} className=\"food-log-form\">\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"date\">Date</label>\r\n              <input \r\n                type=\"date\" \r\n                id=\"date\" \r\n                name=\"date\" \r\n                value={formData.date} \r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"mealType\">Meal Type</label>\r\n              <select \r\n                id=\"mealType\" \r\n                name=\"mealType\" \r\n                value={formData.mealType} \r\n                onChange={handleInputChange}\r\n                required\r\n              >\r\n                <option value=\"breakfast\">Breakfast</option>\r\n                <option value=\"lunch\">Lunch</option>\r\n                <option value=\"dinner\">Dinner</option>\r\n                <option value=\"snack\">Snack</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"form-group water-intake\">\r\n            <label htmlFor=\"waterIntake\">Water Intake (ml)</label>\r\n            <input \r\n              type=\"number\" \r\n              id=\"waterIntake\" \r\n              name=\"waterIntake\" \r\n              min=\"0\" \r\n              step=\"50\"\r\n              value={formData.waterIntake} \r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"food-search-section\">\r\n            <h3>Add Food Items</h3>\r\n            <div className=\"search-container\">\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Search for food items...\" \r\n                value={searchTerm} \r\n                onChange={handleSearchChange}\r\n                className=\"food-search-input\"\r\n              />\r\n              {isSearching && <div className=\"search-spinner\"></div>}\r\n            </div>\r\n            \r\n            {searchResults.length > 0 && (\r\n              <div className=\"search-results\">\r\n                {searchResults.map(item => (\r\n                  <div key={item.id} className=\"food-item-result\" onClick={() => addFoodItem(item)}>\r\n                    <div className=\"food-item-name\">\r\n                      <strong>{item.name}</strong>\r\n                      <span className=\"food-item-brand\">{item.brand}</span>\r\n                    </div>\r\n                    <div className=\"food-item-nutrition\">\r\n                      <span className=\"food-calories\">{item.calories} kcal</span>\r\n                      <span className=\"food-serving\">{item.servingUnit}</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            \r\n            {searchTerm && searchResults.length === 0 && !isSearching && (\r\n              <div className=\"no-results\">No food items found. Try a different search term.</div>\r\n            )}\r\n          </div>\r\n          \r\n          {selectedFoodItems.length > 0 && (\r\n            <div className=\"selected-foods-section\">\r\n              <h3>Selected Food Items</h3>\r\n              <div className=\"selected-foods-list\">\r\n                {selectedFoodItems.map((item, index) => (\r\n                  <div key={index} className=\"selected-food-item\">\r\n                    <div className=\"food-item-info\">\r\n                      <span className=\"food-name\">{item.name}</span>\r\n                      <div className=\"serving-control\">\r\n                        <label>Servings:</label>\r\n                        <input \r\n                          type=\"number\" \r\n                          min=\"0.25\" \r\n                          step=\"0.25\" \r\n                          value={item.servingSize} \r\n                          onChange={(e) => updateServingSize(index, parseFloat(e.target.value))}\r\n                        />\r\n                        <span className=\"serving-unit\">{item.servingUnit}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"food-nutrition\">\r\n                      <span className=\"nutrition-value\">{Math.round(item.calories * item.servingSize)} kcal</span>\r\n                      <span className=\"nutrition-value\">{(item.proteins * item.servingSize).toFixed(1)}g protein</span>\r\n                      <span className=\"nutrition-value\">{(item.carbs * item.servingSize).toFixed(1)}g carbs</span>\r\n                      <span className=\"nutrition-value\">{(item.fats * item.servingSize).toFixed(1)}g fat</span>\r\n                    </div>\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"remove-food-btn\" \r\n                      onClick={() => removeFoodItem(index)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"nutrition-totals\">\r\n                <h4>Meal Totals:</h4>\r\n                <div className=\"totals-values\">\r\n                  {(() => {\r\n                    const totals = calculateTotals();\r\n                    return (\r\n                      <>\r\n                        <div className=\"total-item\">\r\n                          <span className=\"total-label\">Calories:</span>\r\n                          <span className=\"total-value\">{Math.round(totals.calories)} kcal</span>\r\n                        </div>\r\n                        <div className=\"total-item\">\r\n                          <span className=\"total-label\">Protein:</span>\r\n                          <span className=\"total-value\">{totals.proteins.toFixed(1)}g</span>\r\n                        </div>\r\n                        <div className=\"total-item\">\r\n                          <span className=\"total-label\">Carbs:</span>\r\n                          <span className=\"total-value\">{totals.carbs.toFixed(1)}g</span>\r\n                        </div>\r\n                        <div className=\"total-item\">\r\n                          <span className=\"total-label\">Fat:</span>\r\n                          <span className=\"total-value\">{totals.fats.toFixed(1)}g</span>\r\n                        </div>\r\n                      </>\r\n                    );\r\n                  })()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"notes\">Notes</label>\r\n            <textarea \r\n              id=\"notes\" \r\n              name=\"notes\" \r\n              value={formData.notes} \r\n              onChange={handleInputChange}\r\n              placeholder=\"Add any notes about this meal...\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              className=\"cancel-button\" \r\n              onClick={() => navigate('/patient-dashboard')}\r\n              disabled={isSubmitting}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              className=\"submit-button\" \r\n              disabled={isSubmitting || selectedFoodItems.length === 0}\r\n            >\r\n              {isSubmitting ? 'Saving...' : 'Save Food Log'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddFoodLog; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}