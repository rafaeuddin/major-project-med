{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrafa\\\\OneDrive\\\\Desktop\\\\code\\\\major project\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1); // 1: Input form, 2: OTP verification\n  const [registrationType, setRegistrationType] = useState('email'); // 'email' or 'phone'\n  const [formData, setFormData] = useState({\n    name: '',\n    username: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: '',\n    role: 'patient'\n  });\n  const [otp, setOtp] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [countdown, setCountdown] = useState(0);\n  useEffect(() => {\n    if (currentUser) {\n      // Redirect based on role\n      if (currentUser.role === 'doctor') {\n        navigate('/doctor-dashboard');\n      } else if (currentUser.role === 'patient') {\n        navigate('/patient-dashboard');\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  }, [currentUser, navigate]);\n  useEffect(() => {\n    let timer;\n    if (countdown > 0) {\n      timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n    }\n    return () => clearTimeout(timer);\n  }, [countdown]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const toggleRegistrationType = () => {\n    setRegistrationType(registrationType === 'email' ? 'phone' : 'email');\n    setError('');\n  };\n  const validateForm = () => {\n    // Name validation\n    if (!formData.name.trim()) {\n      setError('Name is required');\n      return false;\n    }\n\n    // Username validation\n    if (!formData.username.trim()) {\n      setError('Username is required');\n      return false;\n    }\n    if (formData.username.length < 3) {\n      setError('Username must be at least 3 characters');\n      return false;\n    }\n\n    // Email/Phone validation\n    if (registrationType === 'email') {\n      if (!formData.email) {\n        setError('Email is required');\n        return false;\n      }\n      const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if (!emailRegex.test(formData.email)) {\n        setError('Please enter a valid email address');\n        return false;\n      }\n    } else {\n      if (!formData.phone) {\n        setError('Phone number is required');\n        return false;\n      }\n\n      // Simple phone validation - you might want to use a more sophisticated one\n      if (formData.phone.length < 10) {\n        setError('Please enter a valid phone number');\n        return false;\n      }\n    }\n\n    // Password validation\n    if (!formData.password) {\n      setError('Password is required');\n      return false;\n    }\n    if (formData.password.length < 6) {\n      setError('Password must be at least 6 characters');\n      return false;\n    }\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return false;\n    }\n    return true;\n  };\n  const handleRegistrationSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccessMessage('');\n    if (!validateForm()) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const endpoint = registrationType === 'email' ? '/api/auth/register/email' : '/api/auth/register/phone';\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: formData.name,\n          username: formData.username,\n          email: registrationType === 'email' ? formData.email : undefined,\n          phone: registrationType === 'phone' ? formData.phone : undefined,\n          password: formData.password,\n          role: formData.role\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n      setSuccessMessage(data.message);\n      setStep(2);\n      setCountdown(60); // 60 seconds countdown for resend\n    } catch (err) {\n      setError(err.message || 'An error occurred during registration');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleResendOTP = async () => {\n    if (countdown > 0) return;\n    setError('');\n    setLoading(true);\n    try {\n      const endpoint = registrationType === 'email' ? '/api/auth/send-email-otp' : '/api/auth/send-phone-otp';\n      const contactField = registrationType === 'email' ? {\n        email: formData.email\n      } : {\n        phone: formData.phone\n      };\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(contactField)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to resend verification code');\n      }\n      setSuccessMessage('Verification code resent successfully');\n      setCountdown(60); // Reset countdown\n    } catch (err) {\n      setError(err.message || 'Failed to resend verification code');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleVerifyOTP = async e => {\n    e.preventDefault();\n    if (!otp) {\n      return setError('Please enter verification code');\n    }\n    setError('');\n    setLoading(true);\n    try {\n      const endpoint = registrationType === 'email' ? '/api/auth/verify-email-otp' : '/api/auth/verify-phone-otp';\n      const contactField = registrationType === 'email' ? {\n        email: formData.email,\n        otp\n      } : {\n        phone: formData.phone,\n        otp\n      };\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(contactField)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Verification failed');\n      }\n      setSuccessMessage('Verification successful! Redirecting to login...');\n\n      // Redirect to login after 2 seconds\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } catch (err) {\n      setError(err.message || 'Verification failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Medical Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create a new account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-alert\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), step === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegistrationSubmit,\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registration-type-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `toggle-btn ${registrationType === 'email' ? 'active' : ''}`,\n            onClick: () => setRegistrationType('email'),\n            children: \"Register with Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `toggle-btn ${registrationType === 'phone' ? 'active' : ''}`,\n            onClick: () => setRegistrationType('phone'),\n            children: \"Register with Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange,\n            placeholder: \"Enter your full name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleChange,\n            placeholder: \"Choose a username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), registrationType === 'email' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            placeholder: \"Enter your email address\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"phone\",\n            name: \"phone\",\n            value: formData.phone,\n            onChange: handleChange,\n            placeholder: \"Enter your phone number\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            placeholder: \"Create a password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            value: formData.confirmPassword,\n            onChange: handleChange,\n            placeholder: \"Confirm your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Account Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"role-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: `role-option ${formData.role === 'patient' ? 'selected' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"role\",\n                value: \"patient\",\n                checked: formData.role === 'patient',\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"role-icon\",\n                children: \"\\uD83D\\uDC64\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: `role-option ${formData.role === 'doctor' ? 'selected' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"role\",\n                value: \"doctor\",\n                checked: formData.role === 'doctor',\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"role-icon\",\n                children: \"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"register-button\",\n          disabled: loading,\n          children: loading ? 'Registering...' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verification-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Verification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"verification-info\",\n          children: registrationType === 'email' ? `We've sent a verification code to ${formData.email}` : `We've sent a verification code to ${formData.phone}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleVerifyOTP,\n          className: \"verification-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"otp\",\n              children: \"Verification Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"otp\",\n              value: otp,\n              onChange: e => setOtp(e.target.value),\n              placeholder: \"Enter 6-digit code\",\n              maxLength: 6,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"verify-button\",\n            disabled: loading,\n            children: loading ? 'Verifying...' : 'Verify'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resend-container\",\n          children: countdown > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Resend code in \", countdown, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"resend-button\",\n            onClick: handleResendOTP,\n            disabled: loading,\n            children: \"Resend Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"back-option\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"back-button\",\n            onClick: () => setStep(1),\n            children: \"Back to Registration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"EX9XT9kX19kLkM04zzKWA4O4k/M=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useAuth","jsxDEV","_jsxDEV","Register","_s","currentUser","navigate","step","setStep","registrationType","setRegistrationType","formData","setFormData","name","username","email","phone","password","confirmPassword","role","otp","setOtp","loading","setLoading","error","setError","successMessage","setSuccessMessage","countdown","setCountdown","timer","setTimeout","clearTimeout","handleChange","e","value","target","toggleRegistrationType","validateForm","trim","length","emailRegex","test","handleRegistrationSubmit","preventDefault","endpoint","response","fetch","method","headers","body","JSON","stringify","undefined","data","json","ok","Error","message","err","handleResendOTP","contactField","handleVerifyOTP","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","htmlFor","id","onChange","placeholder","required","checked","disabled","to","maxLength","_c","$RefreshReg$"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/pages/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/Register.css';\n\nconst Register = () => {\n  const { currentUser } = useAuth();\n  const navigate = useNavigate();\n  \n  const [step, setStep] = useState(1); // 1: Input form, 2: OTP verification\n  const [registrationType, setRegistrationType] = useState('email'); // 'email' or 'phone'\n  const [formData, setFormData] = useState({\n    name: '',\n    username: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: '',\n    role: 'patient'\n  });\n  \n  const [otp, setOtp] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [countdown, setCountdown] = useState(0);\n  \n  useEffect(() => {\n    if (currentUser) {\n      // Redirect based on role\n      if (currentUser.role === 'doctor') {\n        navigate('/doctor-dashboard');\n      } else if (currentUser.role === 'patient') {\n        navigate('/patient-dashboard');\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  }, [currentUser, navigate]);\n  \n  useEffect(() => {\n    let timer;\n    if (countdown > 0) {\n      timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n    }\n    return () => clearTimeout(timer);\n  }, [countdown]);\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  \n  const toggleRegistrationType = () => {\n    setRegistrationType(registrationType === 'email' ? 'phone' : 'email');\n    setError('');\n  };\n  \n  const validateForm = () => {\n    // Name validation\n    if (!formData.name.trim()) {\n      setError('Name is required');\n      return false;\n    }\n    \n    // Username validation\n    if (!formData.username.trim()) {\n      setError('Username is required');\n      return false;\n    }\n    \n    if (formData.username.length < 3) {\n      setError('Username must be at least 3 characters');\n      return false;\n    }\n    \n    // Email/Phone validation\n    if (registrationType === 'email') {\n      if (!formData.email) {\n        setError('Email is required');\n        return false;\n      }\n      \n      const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if (!emailRegex.test(formData.email)) {\n        setError('Please enter a valid email address');\n        return false;\n      }\n    } else {\n      if (!formData.phone) {\n        setError('Phone number is required');\n        return false;\n      }\n      \n      // Simple phone validation - you might want to use a more sophisticated one\n      if (formData.phone.length < 10) {\n        setError('Please enter a valid phone number');\n        return false;\n      }\n    }\n    \n    // Password validation\n    if (!formData.password) {\n      setError('Password is required');\n      return false;\n    }\n    \n    if (formData.password.length < 6) {\n      setError('Password must be at least 6 characters');\n      return false;\n    }\n    \n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return false;\n    }\n    \n    return true;\n  };\n  \n  const handleRegistrationSubmit = async (e) => {\n    e.preventDefault();\n    \n    setError('');\n    setSuccessMessage('');\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      const endpoint = registrationType === 'email' \n        ? '/api/auth/register/email' \n        : '/api/auth/register/phone';\n      \n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: formData.name,\n          username: formData.username,\n          email: registrationType === 'email' ? formData.email : undefined,\n          phone: registrationType === 'phone' ? formData.phone : undefined,\n          password: formData.password,\n          role: formData.role\n        })\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n      \n      setSuccessMessage(data.message);\n      setStep(2);\n      setCountdown(60); // 60 seconds countdown for resend\n      \n    } catch (err) {\n      setError(err.message || 'An error occurred during registration');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleResendOTP = async () => {\n    if (countdown > 0) return;\n    \n    setError('');\n    setLoading(true);\n    \n    try {\n      const endpoint = registrationType === 'email' \n        ? '/api/auth/send-email-otp' \n        : '/api/auth/send-phone-otp';\n      \n      const contactField = registrationType === 'email' \n        ? { email: formData.email } \n        : { phone: formData.phone };\n      \n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(contactField)\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to resend verification code');\n      }\n      \n      setSuccessMessage('Verification code resent successfully');\n      setCountdown(60); // Reset countdown\n      \n    } catch (err) {\n      setError(err.message || 'Failed to resend verification code');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleVerifyOTP = async (e) => {\n    e.preventDefault();\n    \n    if (!otp) {\n      return setError('Please enter verification code');\n    }\n    \n    setError('');\n    setLoading(true);\n    \n    try {\n      const endpoint = registrationType === 'email' \n        ? '/api/auth/verify-email-otp' \n        : '/api/auth/verify-phone-otp';\n      \n      const contactField = registrationType === 'email' \n        ? { email: formData.email, otp } \n        : { phone: formData.phone, otp };\n      \n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(contactField)\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Verification failed');\n      }\n      \n      setSuccessMessage('Verification successful! Redirecting to login...');\n      \n      // Redirect to login after 2 seconds\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n      \n    } catch (err) {\n      setError(err.message || 'Verification failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <div className=\"register-page\">\n      <div className=\"register-container\">\n        <div className=\"register-header\">\n          <h1>Medical Portal</h1>\n          <p>Create a new account</p>\n        </div>\n        \n        {error && (\n          <div className=\"error-alert\">\n            {error}\n          </div>\n        )}\n        \n        {successMessage && (\n          <div className=\"success-alert\">\n            {successMessage}\n          </div>\n        )}\n        \n        {step === 1 ? (\n          <form onSubmit={handleRegistrationSubmit} className=\"register-form\">\n            <div className=\"registration-type-toggle\">\n              <button \n                type=\"button\"\n                className={`toggle-btn ${registrationType === 'email' ? 'active' : ''}`}\n                onClick={() => setRegistrationType('email')}\n              >\n                Register with Email\n              </button>\n              <button \n                type=\"button\"\n                className={`toggle-btn ${registrationType === 'phone' ? 'active' : ''}`}\n                onClick={() => setRegistrationType('phone')}\n              >\n                Register with Phone\n              </button>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Full Name</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n                placeholder=\"Enter your full name\"\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                name=\"username\"\n                value={formData.username}\n                onChange={handleChange}\n                placeholder=\"Choose a username\"\n                required\n              />\n            </div>\n            \n            {registrationType === 'email' ? (\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email Address</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder=\"Enter your email address\"\n                  required\n                />\n              </div>\n            ) : (\n              <div className=\"form-group\">\n                <label htmlFor=\"phone\">Phone Number</label>\n                <input\n                  type=\"tel\"\n                  id=\"phone\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleChange}\n                  placeholder=\"Enter your phone number\"\n                  required\n                />\n              </div>\n            )}\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                placeholder=\"Create a password\"\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              <input\n                type=\"password\"\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={formData.confirmPassword}\n                onChange={handleChange}\n                placeholder=\"Confirm your password\"\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label>Account Type</label>\n              <div className=\"role-options\">\n                <label className={`role-option ${formData.role === 'patient' ? 'selected' : ''}`}>\n                  <input\n                    type=\"radio\"\n                    name=\"role\"\n                    value=\"patient\"\n                    checked={formData.role === 'patient'}\n                    onChange={handleChange}\n                  />\n                  <div className=\"role-icon\">👤</div>\n                  <span>Patient</span>\n                </label>\n                <label className={`role-option ${formData.role === 'doctor' ? 'selected' : ''}`}>\n                  <input\n                    type=\"radio\"\n                    name=\"role\"\n                    value=\"doctor\"\n                    checked={formData.role === 'doctor'}\n                    onChange={handleChange}\n                  />\n                  <div className=\"role-icon\">👨‍⚕️</div>\n                  <span>Doctor</span>\n                </label>\n              </div>\n            </div>\n            \n            <button \n              type=\"submit\" \n              className=\"register-button\"\n              disabled={loading}\n            >\n              {loading ? 'Registering...' : 'Register'}\n            </button>\n            \n            <div className=\"register-footer\">\n              <p>\n                Already have an account? <Link to=\"/login\">Login</Link>\n              </p>\n            </div>\n          </form>\n        ) : (\n          <div className=\"verification-container\">\n            <h2>Verification</h2>\n            <p className=\"verification-info\">\n              {registrationType === 'email' \n                ? `We've sent a verification code to ${formData.email}`\n                : `We've sent a verification code to ${formData.phone}`\n              }\n            </p>\n            \n            <form onSubmit={handleVerifyOTP} className=\"verification-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"otp\">Verification Code</label>\n                <input\n                  type=\"text\"\n                  id=\"otp\"\n                  value={otp}\n                  onChange={(e) => setOtp(e.target.value)}\n                  placeholder=\"Enter 6-digit code\"\n                  maxLength={6}\n                  required\n                />\n              </div>\n              \n              <button \n                type=\"submit\" \n                className=\"verify-button\"\n                disabled={loading}\n              >\n                {loading ? 'Verifying...' : 'Verify'}\n              </button>\n            </form>\n            \n            <div className=\"resend-container\">\n              {countdown > 0 ? (\n                <p>Resend code in {countdown} seconds</p>\n              ) : (\n                <button \n                  type=\"button\" \n                  className=\"resend-button\"\n                  onClick={handleResendOTP}\n                  disabled={loading}\n                >\n                  Resend Code\n                </button>\n              )}\n            </div>\n            \n            <div className=\"back-option\">\n              <button \n                type=\"button\" \n                className=\"back-button\"\n                onClick={() => setStep(1)}\n              >\n                Back to Registration\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Register; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}