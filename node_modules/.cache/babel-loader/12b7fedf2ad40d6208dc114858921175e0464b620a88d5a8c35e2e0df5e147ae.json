{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrafa\\\\OneDrive\\\\Desktop\\\\code\\\\major project\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      setToken(token);\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n\n  // Fetch user data from token\n  const fetchUserData = async () => {\n    if (!token) return null;\n    try {\n      const response = await authFetch('/api/auth/me');\n      if (response.ok) {\n        const data = await response.json();\n        return data.data;\n      }\n      return null;\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      return null;\n    }\n  };\n\n  // Login function - called with token and user from API\n  const login = (authToken, user) => {\n    localStorage.setItem('token', authToken);\n    localStorage.setItem('user', JSON.stringify(user));\n    setToken(authToken);\n    setCurrentUser(user);\n    return true;\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setToken('');\n    setCurrentUser(null);\n  };\n\n  // Reusable fetch function with auth token\n  const authFetch = async (url, options = {}) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      ...options.headers\n    };\n    if (token) {\n      headers.Authorization = `Bearer ${token}`;\n    }\n    const config = {\n      ...options,\n      headers\n    };\n    return fetch(url, config);\n  };\n\n  // Register with email\n  const registerWithEmail = async formData => {\n    try {\n      setError('');\n      const response = await fetch('/api/auth/register/email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || 'Registration failed');\n        return false;\n      }\n      return true;\n    } catch (err) {\n      setError('An error occurred during registration');\n      console.error(err);\n      return false;\n    }\n  };\n\n  // Register with phone\n  const registerWithPhone = async formData => {\n    try {\n      setError('');\n      const response = await fetch('/api/auth/register/phone', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || 'Registration failed');\n        return false;\n      }\n      return true;\n    } catch (err) {\n      setError('An error occurred during registration');\n      console.error(err);\n      return false;\n    }\n  };\n\n  // Verify email OTP\n  const verifyEmailOTP = async (email, otp) => {\n    try {\n      setError('');\n      const response = await fetch('/api/auth/verify-email-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          otp\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || 'Verification failed');\n        return false;\n      }\n      login(data.token, data.user);\n      return true;\n    } catch (err) {\n      setError('An error occurred during verification');\n      console.error(err);\n      return false;\n    }\n  };\n\n  // Verify phone OTP\n  const verifyPhoneOTP = async (phone, otp) => {\n    try {\n      setError('');\n      const response = await fetch('/api/auth/verify-phone-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          phone,\n          otp\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || 'Verification failed');\n        return false;\n      }\n      login(data.token, data.user);\n      return true;\n    } catch (err) {\n      setError('An error occurred during verification');\n      console.error(err);\n      return false;\n    }\n  };\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    logout,\n    authFetch,\n    registerWithEmail,\n    registerWithPhone,\n    verifyEmailOTP,\n    verifyPhoneOTP\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"zfFfAUrY7WUaJPdJsmKSY6vAq+g=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","error","setError","token","setToken","localStorage","getItem","user","JSON","parse","fetchUserData","response","authFetch","ok","data","json","console","login","authToken","setItem","stringify","logout","removeItem","url","options","headers","Authorization","config","fetch","registerWithEmail","formData","method","body","message","err","registerWithPhone","verifyEmailOTP","email","otp","verifyPhoneOTP","phone","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n\r\n  // Check if user is logged in on initial load\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n\r\n    if (token && user) {\r\n      setToken(token);\r\n      setCurrentUser(JSON.parse(user));\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Fetch user data from token\r\n  const fetchUserData = async () => {\r\n    if (!token) return null;\r\n\r\n    try {\r\n      const response = await authFetch('/api/auth/me');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return data.data;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Login function - called with token and user from API\r\n  const login = (authToken, user) => {\r\n    localStorage.setItem('token', authToken);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    setToken(authToken);\r\n    setCurrentUser(user);\r\n    return true;\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setToken('');\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  // Reusable fetch function with auth token\r\n  const authFetch = async (url, options = {}) => {\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      ...options.headers,\r\n    };\r\n\r\n    if (token) {\r\n      headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    const config = {\r\n      ...options,\r\n      headers,\r\n    };\r\n\r\n    return fetch(url, config);\r\n  };\r\n\r\n  // Register with email\r\n  const registerWithEmail = async (formData) => {\r\n    try {\r\n      setError('');\r\n      const response = await fetch('/api/auth/register/email', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData)\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        setError(data.message || 'Registration failed');\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      setError('An error occurred during registration');\r\n      console.error(err);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Register with phone\r\n  const registerWithPhone = async (formData) => {\r\n    try {\r\n      setError('');\r\n      const response = await fetch('/api/auth/register/phone', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData)\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        setError(data.message || 'Registration failed');\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      setError('An error occurred during registration');\r\n      console.error(err);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Verify email OTP\r\n  const verifyEmailOTP = async (email, otp) => {\r\n    try {\r\n      setError('');\r\n      const response = await fetch('/api/auth/verify-email-otp', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, otp })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        setError(data.message || 'Verification failed');\r\n        return false;\r\n      }\r\n      \r\n      login(data.token, data.user);\r\n      return true;\r\n    } catch (err) {\r\n      setError('An error occurred during verification');\r\n      console.error(err);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Verify phone OTP\r\n  const verifyPhoneOTP = async (phone, otp) => {\r\n    try {\r\n      setError('');\r\n      const response = await fetch('/api/auth/verify-phone-otp', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ phone, otp })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        setError(data.message || 'Verification failed');\r\n        return false;\r\n      }\r\n      \r\n      login(data.token, data.user);\r\n      return true;\r\n    } catch (err) {\r\n      setError('An error occurred during verification');\r\n      console.error(err);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    authFetch,\r\n    registerWithEmail,\r\n    registerWithPhone,\r\n    verifyEmailOTP,\r\n    verifyPhoneOTP\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}