{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrafa\\\\OneDrive\\\\Desktop\\\\code\\\\major project\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if there's a token in localStorage and fetch user data\n    const fetchUser = async () => {\n      if (token) {\n        try {\n          const response = await fetch('/api/users/me', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const userData = await response.json();\n            setCurrentUser(userData);\n          } else {\n            // Token might be invalid or expired\n            logout();\n          }\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n          setError('Failed to authenticate user');\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    fetchUser();\n  }, [token]);\n\n  // Login function\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        setToken(data.token);\n        return true;\n      } else {\n        setError(data.msg || 'Login failed');\n        return false;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('An error occurred during login');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        setToken(data.token);\n        return true;\n      } else {\n        setError(data.msg || 'Registration failed');\n        return false;\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      setError('An error occurred during registration');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setCurrentUser(null);\n  };\n\n  // Helper function for authenticated API requests\n  const authFetch = async (url, options = {}) => {\n    if (!token) {\n      throw new Error('No authentication token');\n    }\n    const authOptions = {\n      ...options,\n      headers: {\n        ...options.headers,\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await fetch(url, authOptions);\n    if (response.status === 401) {\n      // Token expired or invalid\n      logout();\n      throw new Error('Session expired. Please login again.');\n    }\n    return response;\n  };\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    authFetch\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"+r8libbRK1V2EQLs13q04oAaaiQ=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","fetchUser","response","fetch","headers","Authorization","ok","userData","json","logout","console","login","email","password","method","body","JSON","stringify","data","setItem","msg","register","removeItem","authFetch","url","options","Error","authOptions","status","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if there's a token in localStorage and fetch user data\r\n    const fetchUser = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await fetch('/api/users/me', {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n\r\n          if (response.ok) {\r\n            const userData = await response.json();\r\n            setCurrentUser(userData);\r\n          } else {\r\n            // Token might be invalid or expired\r\n            logout();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching user data:', error);\r\n          setError('Failed to authenticate user');\r\n          logout();\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchUser();\r\n  }, [token]);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('/api/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        localStorage.setItem('token', data.token);\r\n        setToken(data.token);\r\n        return true;\r\n      } else {\r\n        setError(data.msg || 'Login failed');\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setError('An error occurred during login');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('/api/users/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(userData)\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        localStorage.setItem('token', data.token);\r\n        setToken(data.token);\r\n        return true;\r\n      } else {\r\n        setError(data.msg || 'Registration failed');\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      setError('An error occurred during registration');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  // Helper function for authenticated API requests\r\n  const authFetch = async (url, options = {}) => {\r\n    if (!token) {\r\n      throw new Error('No authentication token');\r\n    }\r\n\r\n    const authOptions = {\r\n      ...options,\r\n      headers: {\r\n        ...options.headers,\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n\r\n    const response = await fetch(url, authOptions);\r\n    \r\n    if (response.status === 401) {\r\n      // Token expired or invalid\r\n      logout();\r\n      throw new Error('Session expired. Please login again.');\r\n    }\r\n    \r\n    return response;\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    authFetch\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}