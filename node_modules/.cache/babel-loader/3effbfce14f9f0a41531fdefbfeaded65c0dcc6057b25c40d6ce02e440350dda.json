{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrafa\\\\OneDrive\\\\Desktop\\\\code\\\\major project\\\\src\\\\components\\\\AppointmentsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentsList = () => {\n  _s();\n  const {\n    currentUser,\n    authFetch\n  } = useAuth();\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [actionInProgress, setActionInProgress] = useState(null);\n  const [message, setMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [retryCount, setRetryCount] = useState(0);\n  const MAX_RETRIES = 3;\n\n  // Function to retry fetching with exponential backoff\n  const fetchWithRetry = async (url, options = {}, attempt = 0) => {\n    try {\n      const response = await authFetch(url, options);\n      return response;\n    } catch (error) {\n      if (attempt < MAX_RETRIES) {\n        // Exponential backoff: wait longer between each retry\n        const delay = Math.pow(2, attempt) * 500;\n        console.log(`Retry ${attempt + 1}/${MAX_RETRIES} after ${delay}ms for ${url}`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return fetchWithRetry(url, options, attempt + 1);\n      }\n      throw error;\n    }\n  };\n\n  // Fetch user appointments\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        if (!currentUser) return;\n\n        // Clear previous error if any\n        setError('');\n        const response = await fetchWithRetry('/api/appointments/user');\n        if (response.ok) {\n          try {\n            var _data$appointments;\n            const data = await response.json();\n            console.log('Appointments loaded:', ((_data$appointments = data.appointments) === null || _data$appointments === void 0 ? void 0 : _data$appointments.length) || 0);\n            setAppointments(data.appointments || []);\n            setRetryCount(0); // Reset retry count on success\n          } catch (parseError) {\n            console.error('Error parsing appointments JSON:', parseError);\n            setError('Could not process the appointment data. Please try again later.');\n          }\n        } else {\n          try {\n            const errorData = await response.json();\n            setError(errorData.message || 'Failed to fetch appointments');\n          } catch (parseError) {\n            setError('Failed to fetch appointments. Server returned an invalid response.');\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n        setError('Error fetching appointments. Please try again later.');\n\n        // If we haven't exceeded retries and this is a network error, try again\n        if (retryCount < MAX_RETRIES && (error.name === 'TypeError' || error.message.includes('network'))) {\n          setRetryCount(prevCount => prevCount + 1);\n          const delay = Math.pow(2, retryCount) * 1000;\n          console.log(`Will retry in ${delay}ms (attempt ${retryCount + 1}/${MAX_RETRIES})`);\n          setTimeout(() => {\n            if (currentUser) fetchAppointments();\n          }, delay);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (currentUser) {\n      fetchAppointments();\n    } else {\n      setLoading(false);\n    }\n  }, [currentUser, authFetch, retryCount]);\n\n  // Format date\n  const formatDate = dateString => {\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Cancel appointment\n  const cancelAppointment = async appointmentId => {\n    setActionInProgress(appointmentId);\n    setMessage({\n      text: '',\n      type: ''\n    });\n    try {\n      const response = await fetchWithRetry(`/api/appointments/${appointmentId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        try {\n          const data = await response.json();\n\n          // Update the appointment in the state\n          setAppointments(prevAppointments => prevAppointments.map(appointment => appointment._id === appointmentId ? {\n            ...appointment,\n            status: 'cancelled'\n          } : appointment));\n          setMessage({\n            text: data.message || 'Appointment cancelled successfully',\n            type: 'success'\n          });\n        } catch (parseError) {\n          console.error('Error parsing cancellation response:', parseError);\n\n          // Still update the UI state even if parsing failed\n          setAppointments(prevAppointments => prevAppointments.map(appointment => appointment._id === appointmentId ? {\n            ...appointment,\n            status: 'cancelled'\n          } : appointment));\n          setMessage({\n            text: 'Appointment cancelled',\n            type: 'success'\n          });\n        }\n      } else {\n        try {\n          const errorData = await response.json();\n          setMessage({\n            text: errorData.message || 'Failed to cancel appointment',\n            type: 'error'\n          });\n        } catch (parseError) {\n          setMessage({\n            text: 'Failed to cancel appointment. Server returned an invalid response.',\n            type: 'error'\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n      setMessage({\n        text: 'Error cancelling appointment. Please try again later.',\n        type: 'error'\n      });\n    } finally {\n      setActionInProgress(null);\n    }\n  };\n\n  // Group appointments by status and date\n  const groupedAppointments = {\n    upcoming: appointments.filter(app => ['scheduled', 'rescheduled'].includes(app.status) && new Date(app.date) >= new Date()),\n    past: appointments.filter(app => ['completed', 'cancelled'].includes(app.status) || new Date(app.date) < new Date())\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading appointments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 12\n    }, this);\n  }\n  if (appointments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-appointments\",\n      children: \"You have no appointments scheduled.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointments-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.type}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upcoming Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), groupedAppointments.upcoming.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No upcoming appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointments-grid\",\n        children: groupedAppointments.upcoming.map(appointment => {\n          var _appointment$patientI, _appointment$doctorId, _appointment$doctorId2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"appointment-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-status\",\n              children: appointment.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-date\",\n              children: formatDate(appointment.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-time\",\n              children: appointment.timeSlot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-with\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [currentUser.role === 'doctor' ? 'Patient' : 'Doctor', \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), \" \", currentUser.role === 'doctor' ? ((_appointment$patientI = appointment.patientId) === null || _appointment$patientI === void 0 ? void 0 : _appointment$patientI.name) || 'Unknown Patient' : ((_appointment$doctorId = appointment.doctorId) === null || _appointment$doctorId === void 0 ? void 0 : _appointment$doctorId.name) || 'Unknown Doctor']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), currentUser.role === 'patient' && ((_appointment$doctorId2 = appointment.doctorId) === null || _appointment$doctorId2 === void 0 ? void 0 : _appointment$doctorId2.specialization) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-specialization\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Specialization:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), \" \", appointment.doctorId.specialization]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-reason\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Reason:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), \" \", appointment.reason]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), ['scheduled', 'rescheduled'].includes(appointment.status) && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => cancelAppointment(appointment._id),\n              disabled: actionInProgress === appointment._id,\n              className: \"cancel-button\",\n              children: actionInProgress === appointment._id ? 'Cancelling...' : 'Cancel'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)]\n          }, appointment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Past Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), groupedAppointments.past.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No past appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointments-grid\",\n        children: groupedAppointments.past.map(appointment => {\n          var _appointment$patientI2, _appointment$doctorId3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"appointment-card past\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `appointment-status ${appointment.status}`,\n              children: appointment.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-date\",\n              children: formatDate(appointment.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-time\",\n              children: appointment.timeSlot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-with\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [currentUser.role === 'doctor' ? 'Patient' : 'Doctor', \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), \" \", currentUser.role === 'doctor' ? ((_appointment$patientI2 = appointment.patientId) === null || _appointment$patientI2 === void 0 ? void 0 : _appointment$patientI2.name) || 'Unknown Patient' : ((_appointment$doctorId3 = appointment.doctorId) === null || _appointment$doctorId3 === void 0 ? void 0 : _appointment$doctorId3.name) || 'Unknown Doctor']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-reason\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Reason:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), \" \", appointment.reason]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), appointment.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-notes\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Notes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this), \" \", appointment.notes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)]\n          }, appointment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentsList, \"4iSplXBRuDWGUXsxDYOqupFV0fE=\", false, function () {\n  return [useAuth];\n});\n_c = AppointmentsList;\nexport default AppointmentsList;\nvar _c;\n$RefreshReg$(_c, \"AppointmentsList\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","jsxDEV","_jsxDEV","AppointmentsList","_s","currentUser","authFetch","appointments","setAppointments","loading","setLoading","error","setError","actionInProgress","setActionInProgress","message","setMessage","text","type","retryCount","setRetryCount","MAX_RETRIES","fetchWithRetry","url","options","attempt","response","delay","Math","pow","console","log","Promise","resolve","setTimeout","fetchAppointments","ok","_data$appointments","data","json","length","parseError","errorData","name","includes","prevCount","formatDate","dateString","weekday","year","month","day","Date","toLocaleDateString","undefined","cancelAppointment","appointmentId","method","prevAppointments","map","appointment","_id","status","groupedAppointments","upcoming","filter","app","date","past","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_appointment$patientI","_appointment$doctorId","_appointment$doctorId2","timeSlot","role","patientId","doctorId","specialization","reason","onClick","disabled","_appointment$patientI2","_appointment$doctorId3","notes","_c","$RefreshReg$"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/components/AppointmentsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst AppointmentsList = () => {\r\n  const { currentUser, authFetch } = useAuth();\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [actionInProgress, setActionInProgress] = useState(null);\r\n  const [message, setMessage] = useState({ text: '', type: '' });\r\n  const [retryCount, setRetryCount] = useState(0);\r\n  const MAX_RETRIES = 3;\r\n\r\n  // Function to retry fetching with exponential backoff\r\n  const fetchWithRetry = async (url, options = {}, attempt = 0) => {\r\n    try {\r\n      const response = await authFetch(url, options);\r\n      return response;\r\n    } catch (error) {\r\n      if (attempt < MAX_RETRIES) {\r\n        // Exponential backoff: wait longer between each retry\r\n        const delay = Math.pow(2, attempt) * 500;\r\n        console.log(`Retry ${attempt + 1}/${MAX_RETRIES} after ${delay}ms for ${url}`);\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n        return fetchWithRetry(url, options, attempt + 1);\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Fetch user appointments\r\n  useEffect(() => {\r\n    const fetchAppointments = async () => {\r\n      try {\r\n        if (!currentUser) return;\r\n        \r\n        // Clear previous error if any\r\n        setError('');\r\n        \r\n        const response = await fetchWithRetry('/api/appointments/user');\r\n        \r\n        if (response.ok) {\r\n          try {\r\n            const data = await response.json();\r\n            console.log('Appointments loaded:', data.appointments?.length || 0);\r\n            setAppointments(data.appointments || []);\r\n            setRetryCount(0); // Reset retry count on success\r\n          } catch (parseError) {\r\n            console.error('Error parsing appointments JSON:', parseError);\r\n            setError('Could not process the appointment data. Please try again later.');\r\n          }\r\n        } else {\r\n          try {\r\n            const errorData = await response.json();\r\n            setError(errorData.message || 'Failed to fetch appointments');\r\n          } catch (parseError) {\r\n            setError('Failed to fetch appointments. Server returned an invalid response.');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching appointments:', error);\r\n        setError('Error fetching appointments. Please try again later.');\r\n        \r\n        // If we haven't exceeded retries and this is a network error, try again\r\n        if (retryCount < MAX_RETRIES && (error.name === 'TypeError' || error.message.includes('network'))) {\r\n          setRetryCount(prevCount => prevCount + 1);\r\n          const delay = Math.pow(2, retryCount) * 1000;\r\n          console.log(`Will retry in ${delay}ms (attempt ${retryCount + 1}/${MAX_RETRIES})`);\r\n          setTimeout(() => {\r\n            if (currentUser) fetchAppointments();\r\n          }, delay);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (currentUser) {\r\n      fetchAppointments();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [currentUser, authFetch, retryCount]);\r\n\r\n  // Format date\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  // Cancel appointment\r\n  const cancelAppointment = async (appointmentId) => {\r\n    setActionInProgress(appointmentId);\r\n    setMessage({ text: '', type: '' });\r\n    \r\n    try {\r\n      const response = await fetchWithRetry(`/api/appointments/${appointmentId}`, {\r\n        method: 'DELETE'\r\n      });\r\n      \r\n      if (response.ok) {\r\n        try {\r\n          const data = await response.json();\r\n          \r\n          // Update the appointment in the state\r\n          setAppointments(prevAppointments => \r\n            prevAppointments.map(appointment => \r\n              appointment._id === appointmentId \r\n                ? { ...appointment, status: 'cancelled' } \r\n                : appointment\r\n            )\r\n          );\r\n          \r\n          setMessage({\r\n            text: data.message || 'Appointment cancelled successfully',\r\n            type: 'success'\r\n          });\r\n        } catch (parseError) {\r\n          console.error('Error parsing cancellation response:', parseError);\r\n          \r\n          // Still update the UI state even if parsing failed\r\n          setAppointments(prevAppointments => \r\n            prevAppointments.map(appointment => \r\n              appointment._id === appointmentId \r\n                ? { ...appointment, status: 'cancelled' } \r\n                : appointment\r\n            )\r\n          );\r\n          \r\n          setMessage({\r\n            text: 'Appointment cancelled',\r\n            type: 'success'\r\n          });\r\n        }\r\n      } else {\r\n        try {\r\n          const errorData = await response.json();\r\n          setMessage({\r\n            text: errorData.message || 'Failed to cancel appointment',\r\n            type: 'error'\r\n          });\r\n        } catch (parseError) {\r\n          setMessage({\r\n            text: 'Failed to cancel appointment. Server returned an invalid response.',\r\n            type: 'error'\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cancelling appointment:', error);\r\n      setMessage({\r\n        text: 'Error cancelling appointment. Please try again later.',\r\n        type: 'error'\r\n      });\r\n    } finally {\r\n      setActionInProgress(null);\r\n    }\r\n  };\r\n\r\n  // Group appointments by status and date\r\n  const groupedAppointments = {\r\n    upcoming: appointments.filter(app => \r\n      ['scheduled', 'rescheduled'].includes(app.status) && \r\n      new Date(app.date) >= new Date()\r\n    ),\r\n    past: appointments.filter(app => \r\n      ['completed', 'cancelled'].includes(app.status) || \r\n      new Date(app.date) < new Date()\r\n    )\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading appointments...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">{error}</div>;\r\n  }\r\n\r\n  if (appointments.length === 0) {\r\n    return <div className=\"no-appointments\">You have no appointments scheduled.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"appointments-list\">\r\n      <h2>My Appointments</h2>\r\n      \r\n      {message.text && (\r\n        <div className={`message ${message.type}`}>\r\n          {message.text}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"appointments-section\">\r\n        <h3>Upcoming Appointments</h3>\r\n        {groupedAppointments.upcoming.length === 0 ? (\r\n          <p>No upcoming appointments</p>\r\n        ) : (\r\n          <div className=\"appointments-grid\">\r\n            {groupedAppointments.upcoming.map(appointment => (\r\n              <div key={appointment._id} className=\"appointment-card\">\r\n                <div className=\"appointment-status\">{appointment.status}</div>\r\n                <div className=\"appointment-date\">{formatDate(appointment.date)}</div>\r\n                <div className=\"appointment-time\">{appointment.timeSlot}</div>\r\n                <div className=\"appointment-with\">\r\n                  <strong>{currentUser.role === 'doctor' ? 'Patient' : 'Doctor'}:</strong> {\r\n                    currentUser.role === 'doctor' \r\n                      ? (appointment.patientId?.name || 'Unknown Patient') \r\n                      : (appointment.doctorId?.name || 'Unknown Doctor')\r\n                  }\r\n                </div>\r\n                {currentUser.role === 'patient' && appointment.doctorId?.specialization && (\r\n                  <div className=\"appointment-specialization\">\r\n                    <strong>Specialization:</strong> {appointment.doctorId.specialization}\r\n                  </div>\r\n                )}\r\n                <div className=\"appointment-reason\">\r\n                  <strong>Reason:</strong> {appointment.reason}\r\n                </div>\r\n                \r\n                {['scheduled', 'rescheduled'].includes(appointment.status) && (\r\n                  <button\r\n                    onClick={() => cancelAppointment(appointment._id)}\r\n                    disabled={actionInProgress === appointment._id}\r\n                    className=\"cancel-button\"\r\n                  >\r\n                    {actionInProgress === appointment._id ? 'Cancelling...' : 'Cancel'}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"appointments-section\">\r\n        <h3>Past Appointments</h3>\r\n        {groupedAppointments.past.length === 0 ? (\r\n          <p>No past appointments</p>\r\n        ) : (\r\n          <div className=\"appointments-grid\">\r\n            {groupedAppointments.past.map(appointment => (\r\n              <div key={appointment._id} className=\"appointment-card past\">\r\n                <div className={`appointment-status ${appointment.status}`}>{appointment.status}</div>\r\n                <div className=\"appointment-date\">{formatDate(appointment.date)}</div>\r\n                <div className=\"appointment-time\">{appointment.timeSlot}</div>\r\n                <div className=\"appointment-with\">\r\n                  <strong>{currentUser.role === 'doctor' ? 'Patient' : 'Doctor'}:</strong> {\r\n                    currentUser.role === 'doctor' \r\n                      ? (appointment.patientId?.name || 'Unknown Patient')\r\n                      : (appointment.doctorId?.name || 'Unknown Doctor')\r\n                  }\r\n                </div>\r\n                <div className=\"appointment-reason\">\r\n                  <strong>Reason:</strong> {appointment.reason}\r\n                </div>\r\n                {appointment.notes && (\r\n                  <div className=\"appointment-notes\">\r\n                    <strong>Notes:</strong> {appointment.notes}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentsList; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAGN,OAAO,CAAC,CAAC;EAC5C,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC;IAAEmB,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAC9D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMuB,WAAW,GAAG,CAAC;;EAErB;EACA,MAAMC,cAAc,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAEC,OAAO,GAAG,CAAC,KAAK;IAC/D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,SAAS,CAACiB,GAAG,EAAEC,OAAO,CAAC;MAC9C,OAAOE,QAAQ;IACjB,CAAC,CAAC,OAAOf,KAAK,EAAE;MACd,IAAIc,OAAO,GAAGJ,WAAW,EAAE;QACzB;QACA,MAAMM,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEJ,OAAO,CAAC,GAAG,GAAG;QACxCK,OAAO,CAACC,GAAG,CAAC,SAASN,OAAO,GAAG,CAAC,IAAIJ,WAAW,UAAUM,KAAK,UAAUJ,GAAG,EAAE,CAAC;QAC9E,MAAM,IAAIS,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEN,KAAK,CAAC,CAAC;QACxD,OAAOL,cAAc,CAACC,GAAG,EAAEC,OAAO,EAAEC,OAAO,GAAG,CAAC,CAAC;MAClD;MACA,MAAMd,KAAK;IACb;EACF,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACd,MAAMoC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,IAAI,CAAC9B,WAAW,EAAE;;QAElB;QACAO,QAAQ,CAAC,EAAE,CAAC;QAEZ,MAAMc,QAAQ,GAAG,MAAMJ,cAAc,CAAC,wBAAwB,CAAC;QAE/D,IAAII,QAAQ,CAACU,EAAE,EAAE;UACf,IAAI;YAAA,IAAAC,kBAAA;YACF,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;YAClCT,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,EAAAM,kBAAA,GAAAC,IAAI,CAAC/B,YAAY,cAAA8B,kBAAA,uBAAjBA,kBAAA,CAAmBG,MAAM,KAAI,CAAC,CAAC;YACnEhC,eAAe,CAAC8B,IAAI,CAAC/B,YAAY,IAAI,EAAE,CAAC;YACxCa,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,OAAOqB,UAAU,EAAE;YACnBX,OAAO,CAACnB,KAAK,CAAC,kCAAkC,EAAE8B,UAAU,CAAC;YAC7D7B,QAAQ,CAAC,iEAAiE,CAAC;UAC7E;QACF,CAAC,MAAM;UACL,IAAI;YACF,MAAM8B,SAAS,GAAG,MAAMhB,QAAQ,CAACa,IAAI,CAAC,CAAC;YACvC3B,QAAQ,CAAC8B,SAAS,CAAC3B,OAAO,IAAI,8BAA8B,CAAC;UAC/D,CAAC,CAAC,OAAO0B,UAAU,EAAE;YACnB7B,QAAQ,CAAC,oEAAoE,CAAC;UAChF;QACF;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdmB,OAAO,CAACnB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDC,QAAQ,CAAC,sDAAsD,CAAC;;QAEhE;QACA,IAAIO,UAAU,GAAGE,WAAW,KAAKV,KAAK,CAACgC,IAAI,KAAK,WAAW,IAAIhC,KAAK,CAACI,OAAO,CAAC6B,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE;UACjGxB,aAAa,CAACyB,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;UACzC,MAAMlB,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEV,UAAU,CAAC,GAAG,IAAI;UAC5CW,OAAO,CAACC,GAAG,CAAC,iBAAiBJ,KAAK,eAAeR,UAAU,GAAG,CAAC,IAAIE,WAAW,GAAG,CAAC;UAClFa,UAAU,CAAC,MAAM;YACf,IAAI7B,WAAW,EAAE8B,iBAAiB,CAAC,CAAC;UACtC,CAAC,EAAER,KAAK,CAAC;QACX;MACF,CAAC,SAAS;QACRjB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIL,WAAW,EAAE;MACf8B,iBAAiB,CAAC,CAAC;IACrB,CAAC,MAAM;MACLzB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACL,WAAW,EAAEC,SAAS,EAAEa,UAAU,CAAC,CAAC;;EAExC;EACA,MAAM2B,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMvB,OAAO,GAAG;MAAEwB,OAAO,EAAE,MAAM;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAU,CAAC;IACnF,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAE9B,OAAO,CAAC;EACpE,CAAC;;EAED;EACA,MAAM+B,iBAAiB,GAAG,MAAOC,aAAa,IAAK;IACjD1C,mBAAmB,CAAC0C,aAAa,CAAC;IAClCxC,UAAU,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;IAElC,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMJ,cAAc,CAAC,qBAAqBkC,aAAa,EAAE,EAAE;QAC1EC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI/B,QAAQ,CAACU,EAAE,EAAE;QACf,IAAI;UACF,MAAME,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;;UAElC;UACA/B,eAAe,CAACkD,gBAAgB,IAC9BA,gBAAgB,CAACC,GAAG,CAACC,WAAW,IAC9BA,WAAW,CAACC,GAAG,KAAKL,aAAa,GAC7B;YAAE,GAAGI,WAAW;YAAEE,MAAM,EAAE;UAAY,CAAC,GACvCF,WACN,CACF,CAAC;UAED5C,UAAU,CAAC;YACTC,IAAI,EAAEqB,IAAI,CAACvB,OAAO,IAAI,oCAAoC;YAC1DG,IAAI,EAAE;UACR,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOuB,UAAU,EAAE;UACnBX,OAAO,CAACnB,KAAK,CAAC,sCAAsC,EAAE8B,UAAU,CAAC;;UAEjE;UACAjC,eAAe,CAACkD,gBAAgB,IAC9BA,gBAAgB,CAACC,GAAG,CAACC,WAAW,IAC9BA,WAAW,CAACC,GAAG,KAAKL,aAAa,GAC7B;YAAE,GAAGI,WAAW;YAAEE,MAAM,EAAE;UAAY,CAAC,GACvCF,WACN,CACF,CAAC;UAED5C,UAAU,CAAC;YACTC,IAAI,EAAE,uBAAuB;YAC7BC,IAAI,EAAE;UACR,CAAC,CAAC;QACJ;MACF,CAAC,MAAM;QACL,IAAI;UACF,MAAMwB,SAAS,GAAG,MAAMhB,QAAQ,CAACa,IAAI,CAAC,CAAC;UACvCvB,UAAU,CAAC;YACTC,IAAI,EAAEyB,SAAS,CAAC3B,OAAO,IAAI,8BAA8B;YACzDG,IAAI,EAAE;UACR,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOuB,UAAU,EAAE;UACnBzB,UAAU,CAAC;YACTC,IAAI,EAAE,oEAAoE;YAC1EC,IAAI,EAAE;UACR,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDK,UAAU,CAAC;QACTC,IAAI,EAAE,uDAAuD;QAC7DC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,SAAS;MACRJ,mBAAmB,CAAC,IAAI,CAAC;IAC3B;EACF,CAAC;;EAED;EACA,MAAMiD,mBAAmB,GAAG;IAC1BC,QAAQ,EAAEzD,YAAY,CAAC0D,MAAM,CAACC,GAAG,IAC/B,CAAC,WAAW,EAAE,aAAa,CAAC,CAACtB,QAAQ,CAACsB,GAAG,CAACJ,MAAM,CAAC,IACjD,IAAIV,IAAI,CAACc,GAAG,CAACC,IAAI,CAAC,IAAI,IAAIf,IAAI,CAAC,CACjC,CAAC;IACDgB,IAAI,EAAE7D,YAAY,CAAC0D,MAAM,CAACC,GAAG,IAC3B,CAAC,WAAW,EAAE,WAAW,CAAC,CAACtB,QAAQ,CAACsB,GAAG,CAACJ,MAAM,CAAC,IAC/C,IAAIV,IAAI,CAACc,GAAG,CAACC,IAAI,CAAC,GAAG,IAAIf,IAAI,CAAC,CAChC;EACF,CAAC;EAED,IAAI3C,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAKmE,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/D;EAEA,IAAI/D,KAAK,EAAE;IACT,oBAAOT,OAAA;MAAKmE,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE3D;IAAK;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACrD;EAEA,IAAInE,YAAY,CAACiC,MAAM,KAAK,CAAC,EAAE;IAC7B,oBAAOtC,OAAA;MAAKmE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnF;EAEA,oBACExE,OAAA;IAAKmE,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCpE,OAAA;MAAAoE,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEvB3D,OAAO,CAACE,IAAI,iBACXf,OAAA;MAAKmE,SAAS,EAAE,WAAWtD,OAAO,CAACG,IAAI,EAAG;MAAAoD,QAAA,EACvCvD,OAAO,CAACE;IAAI;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACN,eAEDxE,OAAA;MAAKmE,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCpE,OAAA;QAAAoE,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7BX,mBAAmB,CAACC,QAAQ,CAACxB,MAAM,KAAK,CAAC,gBACxCtC,OAAA;QAAAoE,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE/BxE,OAAA;QAAKmE,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BP,mBAAmB,CAACC,QAAQ,CAACL,GAAG,CAACC,WAAW;UAAA,IAAAe,qBAAA,EAAAC,qBAAA,EAAAC,sBAAA;UAAA,oBAC3C3E,OAAA;YAA2BmE,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBACrDpE,OAAA;cAAKmE,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAEV,WAAW,CAACE;YAAM;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9DxE,OAAA;cAAKmE,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAExB,UAAU,CAACc,WAAW,CAACO,IAAI;YAAC;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtExE,OAAA;cAAKmE,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAEV,WAAW,CAACkB;YAAQ;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9DxE,OAAA;cAAKmE,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC/BpE,OAAA;gBAAAoE,QAAA,GAASjE,WAAW,CAAC0E,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAG,QAAQ,EAAC,GAAC;cAAA;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EACvErE,WAAW,CAAC0E,IAAI,KAAK,QAAQ,GACxB,EAAAJ,qBAAA,GAAAf,WAAW,CAACoB,SAAS,cAAAL,qBAAA,uBAArBA,qBAAA,CAAuBhC,IAAI,KAAI,iBAAiB,GAChD,EAAAiC,qBAAA,GAAAhB,WAAW,CAACqB,QAAQ,cAAAL,qBAAA,uBAApBA,qBAAA,CAAsBjC,IAAI,KAAI,gBAAiB;YAAA;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEnD,CAAC,EACLrE,WAAW,CAAC0E,IAAI,KAAK,SAAS,MAAAF,sBAAA,GAAIjB,WAAW,CAACqB,QAAQ,cAAAJ,sBAAA,uBAApBA,sBAAA,CAAsBK,cAAc,kBACrEhF,OAAA;cAAKmE,SAAS,EAAC,4BAA4B;cAAAC,QAAA,gBACzCpE,OAAA;gBAAAoE,QAAA,EAAQ;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACd,WAAW,CAACqB,QAAQ,CAACC,cAAc;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClE,CACN,eACDxE,OAAA;cAAKmE,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBACjCpE,OAAA;gBAAAoE,QAAA,EAAQ;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACd,WAAW,CAACuB,MAAM;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzC,CAAC,EAEL,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC9B,QAAQ,CAACgB,WAAW,CAACE,MAAM,CAAC,iBACxD5D,OAAA;cACEkF,OAAO,EAAEA,CAAA,KAAM7B,iBAAiB,CAACK,WAAW,CAACC,GAAG,CAAE;cAClDwB,QAAQ,EAAExE,gBAAgB,KAAK+C,WAAW,CAACC,GAAI;cAC/CQ,SAAS,EAAC,eAAe;cAAAC,QAAA,EAExBzD,gBAAgB,KAAK+C,WAAW,CAACC,GAAG,GAAG,eAAe,GAAG;YAAQ;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CACT;UAAA,GA5BOd,WAAW,CAACC,GAAG;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA6BpB,CAAC;QAAA,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENxE,OAAA;MAAKmE,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCpE,OAAA;QAAAoE,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzBX,mBAAmB,CAACK,IAAI,CAAC5B,MAAM,KAAK,CAAC,gBACpCtC,OAAA;QAAAoE,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE3BxE,OAAA;QAAKmE,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BP,mBAAmB,CAACK,IAAI,CAACT,GAAG,CAACC,WAAW;UAAA,IAAA0B,sBAAA,EAAAC,sBAAA;UAAA,oBACvCrF,OAAA;YAA2BmE,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBAC1DpE,OAAA;cAAKmE,SAAS,EAAE,sBAAsBT,WAAW,CAACE,MAAM,EAAG;cAAAQ,QAAA,EAAEV,WAAW,CAACE;YAAM;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtFxE,OAAA;cAAKmE,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAExB,UAAU,CAACc,WAAW,CAACO,IAAI;YAAC;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtExE,OAAA;cAAKmE,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAEV,WAAW,CAACkB;YAAQ;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9DxE,OAAA;cAAKmE,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC/BpE,OAAA;gBAAAoE,QAAA,GAASjE,WAAW,CAAC0E,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAG,QAAQ,EAAC,GAAC;cAAA;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EACvErE,WAAW,CAAC0E,IAAI,KAAK,QAAQ,GACxB,EAAAO,sBAAA,GAAA1B,WAAW,CAACoB,SAAS,cAAAM,sBAAA,uBAArBA,sBAAA,CAAuB3C,IAAI,KAAI,iBAAiB,GAChD,EAAA4C,sBAAA,GAAA3B,WAAW,CAACqB,QAAQ,cAAAM,sBAAA,uBAApBA,sBAAA,CAAsB5C,IAAI,KAAI,gBAAiB;YAAA;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEnD,CAAC,eACNxE,OAAA;cAAKmE,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBACjCpE,OAAA;gBAAAoE,QAAA,EAAQ;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACd,WAAW,CAACuB,MAAM;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzC,CAAC,EACLd,WAAW,CAAC4B,KAAK,iBAChBtF,OAAA;cAAKmE,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAChCpE,OAAA;gBAAAoE,QAAA,EAAQ;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACd,WAAW,CAAC4B,KAAK;YAAA;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CACN;UAAA,GAlBOd,WAAW,CAACC,GAAG;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBpB,CAAC;QAAA,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtE,EAAA,CAzQID,gBAAgB;EAAA,QACeH,OAAO;AAAA;AAAAyF,EAAA,GADtCtF,gBAAgB;AA2QtB,eAAeA,gBAAgB;AAAC,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}