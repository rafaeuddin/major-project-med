{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrafa\\\\OneDrive\\\\Desktop\\\\code\\\\major project\\\\src\\\\components\\\\CalendarComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarComponent = ({\n  onDateSelect,\n  onTimeSlotSelect,\n  selectedDate,\n  selectedTimeSlot\n}) => {\n  _s();\n  const [date, setDate] = useState(selectedDate || new Date());\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [localSelectedTimeSlot, setLocalSelectedTimeSlot] = useState(selectedTimeSlot);\n  useEffect(() => {\n    // Fetch available time slots for the selected date\n    const fetchTimeSlots = async () => {\n      // Simulate an API call to fetch time slots\n      // In a real application, this would be an API call to GET /appointments/slots\n      const availableSlots = ['09:00 AM', '10:00 AM', '11:00 AM', '01:00 PM', '02:00 PM', '03:00 PM']; // This should be replaced with an actual API call\n      setTimeSlots(availableSlots);\n    };\n    fetchTimeSlots();\n  }, [date]);\n  useEffect(() => {\n    setDate(selectedDate || new Date());\n  }, [selectedDate]);\n  useEffect(() => {\n    setLocalSelectedTimeSlot(selectedTimeSlot);\n  }, [selectedTimeSlot]);\n  const onChange = newDate => {\n    setDate(newDate);\n    setLocalSelectedTimeSlot(null);\n    if (onDateSelect) {\n      onDateSelect(newDate);\n    }\n  };\n  const handleTimeSlotSelection = slot => {\n    setLocalSelectedTimeSlot(slot);\n    if (onTimeSlotSelect) {\n      onTimeSlotSelect(slot);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select an Appointment Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected date: \", date.toDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select a Time Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-slots\",\n      children: timeSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTimeSlotSelection(slot),\n        className: localSelectedTimeSlot === slot ? 'selected' : '',\n        style: {\n          margin: '5px',\n          padding: '8px 16px',\n          backgroundColor: localSelectedTimeSlot === slot ? 'lightblue' : 'white',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: slot\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), localSelectedTimeSlot && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected time slot: \", localSelectedTimeSlot]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarComponent, \"xg4s2DCBYfV/MGPNwKYzOjlYv24=\");\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","jsxDEV","_jsxDEV","CalendarComponent","onDateSelect","onTimeSlotSelect","selectedDate","selectedTimeSlot","_s","date","setDate","Date","timeSlots","setTimeSlots","localSelectedTimeSlot","setLocalSelectedTimeSlot","fetchTimeSlots","availableSlots","onChange","newDate","handleTimeSlotSelection","slot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","toDateString","map","index","onClick","style","margin","padding","backgroundColor","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/components/CalendarComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst CalendarComponent = ({ onDateSelect, onTimeSlotSelect, selectedDate, selectedTimeSlot }) => {\r\n  const [date, setDate] = useState(selectedDate || new Date());\r\n  const [timeSlots, setTimeSlots] = useState([]);\r\n  const [localSelectedTimeSlot, setLocalSelectedTimeSlot] = useState(selectedTimeSlot);\r\n\r\n  useEffect(() => {\r\n    // Fetch available time slots for the selected date\r\n    const fetchTimeSlots = async () => {\r\n      // Simulate an API call to fetch time slots\r\n      // In a real application, this would be an API call to GET /appointments/slots\r\n      const availableSlots = [\r\n        '09:00 AM', '10:00 AM', '11:00 AM', '01:00 PM', '02:00 PM', '03:00 PM'\r\n      ]; // This should be replaced with an actual API call\r\n      setTimeSlots(availableSlots);\r\n    };\r\n    fetchTimeSlots();\r\n  }, [date]);\r\n\r\n  useEffect(() => {\r\n    setDate(selectedDate || new Date());\r\n  }, [selectedDate]);\r\n\r\n  useEffect(() => {\r\n    setLocalSelectedTimeSlot(selectedTimeSlot);\r\n  }, [selectedTimeSlot]);\r\n\r\n  const onChange = (newDate) => {\r\n    setDate(newDate);\r\n    setLocalSelectedTimeSlot(null);\r\n    if (onDateSelect) {\r\n      onDateSelect(newDate);\r\n    }\r\n  };\r\n\r\n  const handleTimeSlotSelection = (slot) => {\r\n    setLocalSelectedTimeSlot(slot);\r\n    if (onTimeSlotSelect) {\r\n      onTimeSlotSelect(slot);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-component\">\r\n      <h2>Select an Appointment Date</h2>\r\n      <Calendar\r\n        onChange={onChange}\r\n        value={date}\r\n      />\r\n      <p>Selected date: {date.toDateString()}</p>\r\n\r\n      <h3>Select a Time Slot</h3>\r\n      <div className=\"time-slots\">\r\n        {timeSlots.map((slot, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleTimeSlotSelection(slot)}\r\n            className={localSelectedTimeSlot === slot ? 'selected' : ''}\r\n            style={{\r\n              margin: '5px',\r\n              padding: '8px 16px',\r\n              backgroundColor: localSelectedTimeSlot === slot ? 'lightblue' : 'white',\r\n              border: '1px solid #ccc',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            {slot}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {localSelectedTimeSlot && (\r\n        <p>Selected time slot: {localSelectedTimeSlot}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}