{"ast":null,"code":"import { setupWorker } from 'msw/browser';\nimport { handlers } from './handlers';\n\n// This configures a Service Worker with the given request handlers.\n// We're wrapping all handlers with a delay function that adds minimal delay\n// to avoid network race conditions that might cause timeouts\nconst wrappedHandlers = handlers.map(handler => {\n  // Return a clone of the handler with a simulated delay\n  return handler.clone({\n    async resolver(req, res, ctx) {\n      // Minimal delay but enough to simulate realistic API response\n      await new Promise(resolve => setTimeout(resolve, 50));\n      // Call the original resolver\n      return handler.resolver(req, res, ctx);\n    }\n  });\n});\nexport const worker = setupWorker(...wrappedHandlers);","map":{"version":3,"names":["setupWorker","handlers","wrappedHandlers","map","handler","clone","resolver","req","res","ctx","Promise","resolve","setTimeout","worker"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/mocks/browser.js"],"sourcesContent":["import { setupWorker } from 'msw/browser';\r\nimport { handlers } from './handlers';\r\n\r\n// This configures a Service Worker with the given request handlers.\r\n// We're wrapping all handlers with a delay function that adds minimal delay\r\n// to avoid network race conditions that might cause timeouts\r\nconst wrappedHandlers = handlers.map(handler => {\r\n  // Return a clone of the handler with a simulated delay\r\n  return handler.clone({\r\n    async resolver(req, res, ctx) {\r\n      // Minimal delay but enough to simulate realistic API response\r\n      await new Promise(resolve => setTimeout(resolve, 50));\r\n      // Call the original resolver\r\n      return handler.resolver(req, res, ctx);\r\n    }\r\n  });\r\n});\r\n\r\nexport const worker = setupWorker(...wrappedHandlers); "],"mappings":"AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,YAAY;;AAErC;AACA;AACA;AACA,MAAMC,eAAe,GAAGD,QAAQ,CAACE,GAAG,CAACC,OAAO,IAAI;EAC9C;EACA,OAAOA,OAAO,CAACC,KAAK,CAAC;IACnB,MAAMC,QAAQA,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE;MAC5B;MACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,EAAE,CAAC,CAAC;MACrD;MACA,OAAOP,OAAO,CAACE,QAAQ,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAC;IACxC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,MAAM,GAAGb,WAAW,CAAC,GAAGE,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}