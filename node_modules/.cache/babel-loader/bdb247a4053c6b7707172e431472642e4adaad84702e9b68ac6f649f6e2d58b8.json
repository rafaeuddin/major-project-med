{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrafa\\\\OneDrive\\\\Desktop\\\\code\\\\major project\\\\src\\\\components\\\\CalendarComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarComponent = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\n  useEffect(() => {\n    // Fetch available time slots for the selected date\n    const fetchTimeSlots = async () => {\n      // Simulate an API call to fetch time slots\n      const availableSlots = ['09:00 AM', '10:00 AM', '11:00 AM', '01:00 PM', '02:00 PM', '03:00 PM']; // This should be replaced with an actual API call\n      setTimeSlots(availableSlots);\n    };\n    fetchTimeSlots();\n  }, [date]);\n  const onChange = newDate => {\n    setDate(newDate);\n    setSelectedTimeSlot(null); // Reset selected time slot when date changes\n  };\n  const handleTimeSlotSelection = slot => {\n    setSelectedTimeSlot(slot);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select an Appointment Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected date: \", date.toDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select a Time Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: timeSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTimeSlotSelection(slot),\n        style: {\n          margin: '5px',\n          backgroundColor: selectedTimeSlot === slot ? 'lightblue' : 'white'\n        },\n        children: slot\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), selectedTimeSlot && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected time slot: \", selectedTimeSlot]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarComponent, \"EZF8zpaJzWGA/xuQOWqTs7R4Byo=\");\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","jsxDEV","_jsxDEV","CalendarComponent","_s","date","setDate","Date","timeSlots","setTimeSlots","selectedTimeSlot","setSelectedTimeSlot","fetchTimeSlots","availableSlots","onChange","newDate","handleTimeSlotSelection","slot","children","fileName","_jsxFileName","lineNumber","columnNumber","value","toDateString","map","index","onClick","style","margin","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/components/CalendarComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst CalendarComponent = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [timeSlots, setTimeSlots] = useState([]);\r\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch available time slots for the selected date\r\n    const fetchTimeSlots = async () => {\r\n      // Simulate an API call to fetch time slots\r\n      const availableSlots = [\r\n        '09:00 AM', '10:00 AM', '11:00 AM', '01:00 PM', '02:00 PM', '03:00 PM'\r\n      ]; // This should be replaced with an actual API call\r\n      setTimeSlots(availableSlots);\r\n    };\r\n    fetchTimeSlots();\r\n  }, [date]);\r\n\r\n  const onChange = (newDate) => {\r\n    setDate(newDate);\r\n    setSelectedTimeSlot(null); // Reset selected time slot when date changes\r\n  };\r\n\r\n  const handleTimeSlotSelection = (slot) => {\r\n    setSelectedTimeSlot(slot);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Select an Appointment Date</h2>\r\n      <Calendar\r\n        onChange={onChange}\r\n        value={date}\r\n      />\r\n      <p>Selected date: {date.toDateString()}</p>\r\n\r\n      <h3>Select a Time Slot</h3>\r\n      <div>\r\n        {timeSlots.map((slot, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleTimeSlotSelection(slot)}\r\n            style={{\r\n              margin: '5px',\r\n              backgroundColor: selectedTimeSlot === slot ? 'lightblue' : 'white'\r\n            }}\r\n          >\r\n            {slot}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {selectedTimeSlot && <p>Selected time slot: {selectedTimeSlot}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}