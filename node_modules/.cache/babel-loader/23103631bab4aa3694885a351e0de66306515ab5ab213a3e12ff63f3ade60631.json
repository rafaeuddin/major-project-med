{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrafa\\\\OneDrive\\\\Desktop\\\\code\\\\major project\\\\src\\\\pages\\\\NutritionReports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/NutritionReports.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NutritionReports = () => {\n  _s();\n  const {\n    currentUser,\n    authFetch\n  } = useAuth();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [nutritionData, setNutritionData] = useState(null);\n  const [dateRange, setDateRange] = useState({\n    startDate: new Date(new Date().setDate(new Date().getDate() - 30)).toISOString().split('T')[0],\n    endDate: new Date().toISOString().split('T')[0]\n  });\n  useEffect(() => {\n    // Redirect if not logged in or not a patient\n    if (!currentUser) {\n      return;\n    }\n    if (currentUser.role !== 'patient') {\n      navigate('/');\n    } else {\n      fetchNutritionData();\n    }\n  }, [currentUser, navigate]);\n  const fetchNutritionData = async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      // For demo purposes, we'll just simulate an API call with a delay and mock data\n      setTimeout(() => {\n        const mockNutritionData = {\n          dailySummaries: Array.from({\n            length: 30\n          }, (_, i) => {\n            const date = new Date();\n            date.setDate(date.getDate() - i);\n\n            // Generate some random data with a weekend pattern\n            const isWeekend = date.getDay() === 0 || date.getDay() === 6;\n            const baseCalories = isWeekend ? 2200 : 1800;\n            const variance = Math.random() * 400 - 200; // -200 to +200\n\n            return {\n              date: date.toISOString().split('T')[0],\n              totalCalories: Math.round(baseCalories + variance),\n              totalProteins: Math.round((baseCalories + variance) * 0.2 / 4),\n              // 20% of calories from protein\n              totalCarbs: Math.round((baseCalories + variance) * 0.5 / 4),\n              // 50% of calories from carbs\n              totalFats: Math.round((baseCalories + variance) * 0.3 / 9),\n              // 30% of calories from fat\n              waterIntake: Math.round(1500 + Math.random() * 1000),\n              // 1500-2500ml\n              meals: {\n                breakfast: {\n                  calories: Math.round((baseCalories + variance) * 0.25),\n                  proteins: Math.round((baseCalories + variance) * 0.25 * 0.2 / 4),\n                  carbs: Math.round((baseCalories + variance) * 0.25 * 0.5 / 4),\n                  fats: Math.round((baseCalories + variance) * 0.25 * 0.3 / 9)\n                },\n                lunch: {\n                  calories: Math.round((baseCalories + variance) * 0.35),\n                  proteins: Math.round((baseCalories + variance) * 0.35 * 0.2 / 4),\n                  carbs: Math.round((baseCalories + variance) * 0.35 * 0.5 / 4),\n                  fats: Math.round((baseCalories + variance) * 0.35 * 0.3 / 9)\n                },\n                dinner: {\n                  calories: Math.round((baseCalories + variance) * 0.3),\n                  proteins: Math.round((baseCalories + variance) * 0.3 * 0.2 / 4),\n                  carbs: Math.round((baseCalories + variance) * 0.3 * 0.5 / 4),\n                  fats: Math.round((baseCalories + variance) * 0.3 * 0.3 / 9)\n                },\n                snack: {\n                  calories: Math.round((baseCalories + variance) * 0.1),\n                  proteins: Math.round((baseCalories + variance) * 0.1 * 0.2 / 4),\n                  carbs: Math.round((baseCalories + variance) * 0.1 * 0.5 / 4),\n                  fats: Math.round((baseCalories + variance) * 0.1 * 0.3 / 9)\n                }\n              }\n            };\n          }).sort((a, b) => new Date(a.date) - new Date(b.date)),\n          overallSummary: {\n            totalDays: 30,\n            avgCalories: 1950,\n            avgProteins: 97.5,\n            avgCarbs: 244,\n            avgFats: 65,\n            avgWaterIntake: 2000\n          }\n        };\n        setNutritionData(mockNutritionData);\n        setIsLoading(false);\n      }, 1000);\n\n      /* In a real application, uncomment this code to make actual API calls\r\n      const { startDate, endDate } = dateRange;\r\n      const response = await authFetch(`/api/food/nutrition/summary?startDate=${startDate}&endDate=${endDate}`);\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setNutritionData(data.data);\r\n      } else {\r\n        setError('Failed to load nutrition data');\r\n      }\r\n      */\n    } catch (error) {\n      console.error('Error fetching nutrition data:', error);\n      setError('Error loading nutrition data. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDateRangeChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDateRange(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleApplyDateRange = e => {\n    e.preventDefault();\n    fetchNutritionData();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nutrition-reports-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate('/patient-dashboard'),\n        children: \"\\u2190 Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reports-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reports-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Nutrition Reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"View detailed nutrition statistics and track your progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-range-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Date Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleApplyDateRange,\n          className: \"date-form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"startDate\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"startDate\",\n                name: \"startDate\",\n                value: dateRange.startDate,\n                onChange: handleDateRangeChange,\n                max: dateRange.endDate,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"endDate\",\n                children: \"End Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"endDate\",\n                name: \"endDate\",\n                value: dateRange.endDate,\n                onChange: handleDateRangeChange,\n                min: dateRange.startDate,\n                max: new Date().toISOString().split('T')[0],\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-action\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"apply-button\",\n                children: \"Apply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading nutrition data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this) : nutritionData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reports-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Nutrition Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-cards\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-title\",\n                children: \"Average Daily Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-value\",\n                children: [Math.round(nutritionData.overallSummary.avgCalories), \" kcal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-title\",\n                children: \"Average Protein\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-value\",\n                children: [Math.round(nutritionData.overallSummary.avgProteins), \" g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-title\",\n                children: \"Average Carbs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-value\",\n                children: [Math.round(nutritionData.overallSummary.avgCarbs), \" g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-title\",\n                children: \"Average Fats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-value\",\n                children: [Math.round(nutritionData.overallSummary.avgFats), \" g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-title\",\n                children: \"Average Water\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-value\",\n                children: [Math.round(nutritionData.overallSummary.avgWaterIntake), \" ml\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"daily-breakdown-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Daily Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"daily-data-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-cell date-cell\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-cell\",\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-cell\",\n                children: \"Protein\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-cell\",\n                children: \"Carbs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-cell\",\n                children: \"Fats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-cell\",\n                children: \"Water\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-body\",\n              children: nutritionData.dailySummaries.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-cell date-cell\",\n                  children: new Date(day.date).toLocaleDateString('en-US', {\n                    weekday: 'short',\n                    month: 'short',\n                    day: 'numeric'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-cell\",\n                  children: [Math.round(day.totalCalories), \" kcal\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-cell\",\n                  children: [Math.round(day.totalProteins), \" g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-cell\",\n                  children: [Math.round(day.totalCarbs), \" g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-cell\",\n                  children: [Math.round(day.totalFats), \" g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-cell\",\n                  children: [Math.round(day.waterIntake), \" ml\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-distribution-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Meal Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-description\",\n            children: \"This chart shows the average distribution of calories across different meals.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-chart\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-placeholder\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-bar breakfast\",\n                style: {\n                  height: '25%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bar-label\",\n                  children: \"Breakfast\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bar-value\",\n                  children: \"25%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-bar lunch\",\n                style: {\n                  height: '35%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bar-label\",\n                  children: \"Lunch\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bar-value\",\n                  children: \"35%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-bar dinner\",\n                style: {\n                  height: '30%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bar-label\",\n                  children: \"Dinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bar-value\",\n                  children: \"30%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-bar snack\",\n                style: {\n                  height: '10%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bar-label\",\n                  children: \"Snacks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bar-value\",\n                  children: \"10%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nutrition-insights\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Insights & Recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insights-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"insight-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Calorie Intake\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Your average daily calorie intake is \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [Math.round(nutritionData.overallSummary.avgCalories), \" kcal\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 59\n                }, this), \". Based on your profile, this is within a healthy range for your goals.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"insight-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Protein Consumption\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"You're averaging \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [Math.round(nutritionData.overallSummary.avgProteins), \"g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 39\n                }, this), \" of protein daily, which is adequate for muscle maintenance. Consider increasing to 100-120g for optimal muscle recovery.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"insight-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Hydration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Your water intake averages \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [Math.round(nutritionData.overallSummary.avgWaterIntake), \"ml\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 49\n                }, this), \" daily. The recommended amount is 2000-2500ml. Try to increase your hydration throughout the day.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"insight-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Meal Timing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Your calorie distribution across meals is well balanced. Keeping a consistent meal schedule can help with energy levels and metabolism.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No nutrition data available for the selected date range.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Start tracking your diet by adding food logs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-log-button\",\n          onClick: () => navigate('/add-food-log'),\n          children: \"Add Food Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(NutritionReports, \"1lVkpdCIFHFtnGlTdwSpWuOb6os=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = NutritionReports;\nexport default NutritionReports;\nvar _c;\n$RefreshReg$(_c, \"NutritionReports\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","jsxDEV","_jsxDEV","NutritionReports","_s","currentUser","authFetch","navigate","isLoading","setIsLoading","error","setError","nutritionData","setNutritionData","dateRange","setDateRange","startDate","Date","setDate","getDate","toISOString","split","endDate","role","fetchNutritionData","setTimeout","mockNutritionData","dailySummaries","Array","from","length","_","i","date","isWeekend","getDay","baseCalories","variance","Math","random","totalCalories","round","totalProteins","totalCarbs","totalFats","waterIntake","meals","breakfast","calories","proteins","carbs","fats","lunch","dinner","snack","sort","a","b","overallSummary","totalDays","avgCalories","avgProteins","avgCarbs","avgFats","avgWaterIntake","console","handleDateRangeChange","e","name","value","target","prev","handleApplyDateRange","preventDefault","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","max","required","min","map","day","index","toLocaleDateString","weekday","month","style","height","_c","$RefreshReg$"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/pages/NutritionReports.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport '../styles/NutritionReports.css';\r\n\r\nconst NutritionReports = () => {\r\n  const { currentUser, authFetch } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [nutritionData, setNutritionData] = useState(null);\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: new Date(new Date().setDate(new Date().getDate() - 30)).toISOString().split('T')[0],\r\n    endDate: new Date().toISOString().split('T')[0]\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Redirect if not logged in or not a patient\r\n    if (!currentUser) {\r\n      return;\r\n    }\r\n    \r\n    if (currentUser.role !== 'patient') {\r\n      navigate('/');\r\n    } else {\r\n      fetchNutritionData();\r\n    }\r\n  }, [currentUser, navigate]);\r\n\r\n  const fetchNutritionData = async () => {\r\n    setIsLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // For demo purposes, we'll just simulate an API call with a delay and mock data\r\n      setTimeout(() => {\r\n        const mockNutritionData = {\r\n          dailySummaries: Array.from({ length: 30 }, (_, i) => {\r\n            const date = new Date();\r\n            date.setDate(date.getDate() - i);\r\n            \r\n            // Generate some random data with a weekend pattern\r\n            const isWeekend = date.getDay() === 0 || date.getDay() === 6;\r\n            const baseCalories = isWeekend ? 2200 : 1800;\r\n            const variance = Math.random() * 400 - 200; // -200 to +200\r\n            \r\n            return {\r\n              date: date.toISOString().split('T')[0],\r\n              totalCalories: Math.round(baseCalories + variance),\r\n              totalProteins: Math.round((baseCalories + variance) * 0.2 / 4), // 20% of calories from protein\r\n              totalCarbs: Math.round((baseCalories + variance) * 0.5 / 4), // 50% of calories from carbs\r\n              totalFats: Math.round((baseCalories + variance) * 0.3 / 9), // 30% of calories from fat\r\n              waterIntake: Math.round(1500 + Math.random() * 1000), // 1500-2500ml\r\n              meals: {\r\n                breakfast: {\r\n                  calories: Math.round((baseCalories + variance) * 0.25),\r\n                  proteins: Math.round((baseCalories + variance) * 0.25 * 0.2 / 4),\r\n                  carbs: Math.round((baseCalories + variance) * 0.25 * 0.5 / 4),\r\n                  fats: Math.round((baseCalories + variance) * 0.25 * 0.3 / 9)\r\n                },\r\n                lunch: {\r\n                  calories: Math.round((baseCalories + variance) * 0.35),\r\n                  proteins: Math.round((baseCalories + variance) * 0.35 * 0.2 / 4),\r\n                  carbs: Math.round((baseCalories + variance) * 0.35 * 0.5 / 4),\r\n                  fats: Math.round((baseCalories + variance) * 0.35 * 0.3 / 9)\r\n                },\r\n                dinner: {\r\n                  calories: Math.round((baseCalories + variance) * 0.3),\r\n                  proteins: Math.round((baseCalories + variance) * 0.3 * 0.2 / 4),\r\n                  carbs: Math.round((baseCalories + variance) * 0.3 * 0.5 / 4),\r\n                  fats: Math.round((baseCalories + variance) * 0.3 * 0.3 / 9)\r\n                },\r\n                snack: {\r\n                  calories: Math.round((baseCalories + variance) * 0.1),\r\n                  proteins: Math.round((baseCalories + variance) * 0.1 * 0.2 / 4),\r\n                  carbs: Math.round((baseCalories + variance) * 0.1 * 0.5 / 4),\r\n                  fats: Math.round((baseCalories + variance) * 0.1 * 0.3 / 9)\r\n                }\r\n              }\r\n            };\r\n          }).sort((a, b) => new Date(a.date) - new Date(b.date)),\r\n          overallSummary: {\r\n            totalDays: 30,\r\n            avgCalories: 1950,\r\n            avgProteins: 97.5,\r\n            avgCarbs: 244,\r\n            avgFats: 65,\r\n            avgWaterIntake: 2000\r\n          }\r\n        };\r\n        \r\n        setNutritionData(mockNutritionData);\r\n        setIsLoading(false);\r\n      }, 1000);\r\n      \r\n      /* In a real application, uncomment this code to make actual API calls\r\n      const { startDate, endDate } = dateRange;\r\n      const response = await authFetch(`/api/food/nutrition/summary?startDate=${startDate}&endDate=${endDate}`);\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setNutritionData(data.data);\r\n      } else {\r\n        setError('Failed to load nutrition data');\r\n      }\r\n      */\r\n    } catch (error) {\r\n      console.error('Error fetching nutrition data:', error);\r\n      setError('Error loading nutrition data. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDateRangeChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setDateRange(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleApplyDateRange = (e) => {\r\n    e.preventDefault();\r\n    fetchNutritionData();\r\n  };\r\n\r\n  return (\r\n    <div className=\"nutrition-reports-page\">\r\n      <div className=\"back-button-container\">\r\n        <button className=\"back-button\" onClick={() => navigate('/patient-dashboard')}>\r\n          ← Back to Dashboard\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"reports-container\">\r\n        <div className=\"reports-header\">\r\n          <h1>Nutrition Reports</h1>\r\n          <p>View detailed nutrition statistics and track your progress</p>\r\n        </div>\r\n        \r\n        <div className=\"date-range-form\">\r\n          <h3>Select Date Range</h3>\r\n          <form onSubmit={handleApplyDateRange} className=\"date-form\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"startDate\">Start Date</label>\r\n                <input \r\n                  type=\"date\" \r\n                  id=\"startDate\" \r\n                  name=\"startDate\" \r\n                  value={dateRange.startDate} \r\n                  onChange={handleDateRangeChange}\r\n                  max={dateRange.endDate}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"endDate\">End Date</label>\r\n                <input \r\n                  type=\"date\" \r\n                  id=\"endDate\" \r\n                  name=\"endDate\" \r\n                  value={dateRange.endDate} \r\n                  onChange={handleDateRangeChange}\r\n                  min={dateRange.startDate}\r\n                  max={new Date().toISOString().split('T')[0]}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-action\">\r\n                <button type=\"submit\" className=\"apply-button\">Apply</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        {isLoading ? (\r\n          <div className=\"loading-data\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Loading nutrition data...</p>\r\n          </div>\r\n        ) : nutritionData ? (\r\n          <div className=\"reports-content\">\r\n            <div className=\"summary-section\">\r\n              <h2>Nutrition Summary</h2>\r\n              <div className=\"summary-cards\">\r\n                <div className=\"summary-card\">\r\n                  <span className=\"card-title\">Average Daily Calories</span>\r\n                  <span className=\"card-value\">{Math.round(nutritionData.overallSummary.avgCalories)} kcal</span>\r\n                </div>\r\n                <div className=\"summary-card\">\r\n                  <span className=\"card-title\">Average Protein</span>\r\n                  <span className=\"card-value\">{Math.round(nutritionData.overallSummary.avgProteins)} g</span>\r\n                </div>\r\n                <div className=\"summary-card\">\r\n                  <span className=\"card-title\">Average Carbs</span>\r\n                  <span className=\"card-value\">{Math.round(nutritionData.overallSummary.avgCarbs)} g</span>\r\n                </div>\r\n                <div className=\"summary-card\">\r\n                  <span className=\"card-title\">Average Fats</span>\r\n                  <span className=\"card-value\">{Math.round(nutritionData.overallSummary.avgFats)} g</span>\r\n                </div>\r\n                <div className=\"summary-card\">\r\n                  <span className=\"card-title\">Average Water</span>\r\n                  <span className=\"card-value\">{Math.round(nutritionData.overallSummary.avgWaterIntake)} ml</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"daily-breakdown-section\">\r\n              <h2>Daily Breakdown</h2>\r\n              \r\n              <div className=\"daily-data-table\">\r\n                <div className=\"table-header\">\r\n                  <div className=\"table-cell date-cell\">Date</div>\r\n                  <div className=\"table-cell\">Calories</div>\r\n                  <div className=\"table-cell\">Protein</div>\r\n                  <div className=\"table-cell\">Carbs</div>\r\n                  <div className=\"table-cell\">Fats</div>\r\n                  <div className=\"table-cell\">Water</div>\r\n                </div>\r\n                <div className=\"table-body\">\r\n                  {nutritionData.dailySummaries.map((day, index) => (\r\n                    <div key={index} className=\"table-row\">\r\n                      <div className=\"table-cell date-cell\">\r\n                        {new Date(day.date).toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' })}\r\n                      </div>\r\n                      <div className=\"table-cell\">{Math.round(day.totalCalories)} kcal</div>\r\n                      <div className=\"table-cell\">{Math.round(day.totalProteins)} g</div>\r\n                      <div className=\"table-cell\">{Math.round(day.totalCarbs)} g</div>\r\n                      <div className=\"table-cell\">{Math.round(day.totalFats)} g</div>\r\n                      <div className=\"table-cell\">{Math.round(day.waterIntake)} ml</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"meal-distribution-section\">\r\n              <h2>Meal Distribution</h2>\r\n              <p className=\"section-description\">\r\n                This chart shows the average distribution of calories across different meals.\r\n              </p>\r\n              \r\n              <div className=\"meal-chart\">\r\n                <div className=\"chart-placeholder\">\r\n                  <div className=\"chart-bar breakfast\" style={{ height: '25%' }}>\r\n                    <span className=\"bar-label\">Breakfast</span>\r\n                    <span className=\"bar-value\">25%</span>\r\n                  </div>\r\n                  <div className=\"chart-bar lunch\" style={{ height: '35%' }}>\r\n                    <span className=\"bar-label\">Lunch</span>\r\n                    <span className=\"bar-value\">35%</span>\r\n                  </div>\r\n                  <div className=\"chart-bar dinner\" style={{ height: '30%' }}>\r\n                    <span className=\"bar-label\">Dinner</span>\r\n                    <span className=\"bar-value\">30%</span>\r\n                  </div>\r\n                  <div className=\"chart-bar snack\" style={{ height: '10%' }}>\r\n                    <span className=\"bar-label\">Snacks</span>\r\n                    <span className=\"bar-value\">10%</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"nutrition-insights\">\r\n              <h2>Insights & Recommendations</h2>\r\n              <div className=\"insights-content\">\r\n                <div className=\"insight-card\">\r\n                  <h3>Calorie Intake</h3>\r\n                  <p>Your average daily calorie intake is <strong>{Math.round(nutritionData.overallSummary.avgCalories)} kcal</strong>. Based on your profile, this is within a healthy range for your goals.</p>\r\n                </div>\r\n                <div className=\"insight-card\">\r\n                  <h3>Protein Consumption</h3>\r\n                  <p>You're averaging <strong>{Math.round(nutritionData.overallSummary.avgProteins)}g</strong> of protein daily, which is adequate for muscle maintenance. Consider increasing to 100-120g for optimal muscle recovery.</p>\r\n                </div>\r\n                <div className=\"insight-card\">\r\n                  <h3>Hydration</h3>\r\n                  <p>Your water intake averages <strong>{Math.round(nutritionData.overallSummary.avgWaterIntake)}ml</strong> daily. The recommended amount is 2000-2500ml. Try to increase your hydration throughout the day.</p>\r\n                </div>\r\n                <div className=\"insight-card\">\r\n                  <h3>Meal Timing</h3>\r\n                  <p>Your calorie distribution across meals is well balanced. Keeping a consistent meal schedule can help with energy levels and metabolism.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"no-data-message\">\r\n            <p>No nutrition data available for the selected date range.</p>\r\n            <p>Start tracking your diet by adding food logs.</p>\r\n            <button \r\n              className=\"add-log-button\"\r\n              onClick={() => navigate('/add-food-log')}\r\n            >\r\n              Add Food Log\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NutritionReports; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}