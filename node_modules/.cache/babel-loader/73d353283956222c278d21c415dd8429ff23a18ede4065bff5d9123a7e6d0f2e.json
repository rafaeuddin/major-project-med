{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrafa\\\\OneDrive\\\\Desktop\\\\code\\\\major project\\\\src\\\\pages\\\\PhoneLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/PhoneLogin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhoneLogin = () => {\n  _s();\n  const [step, setStep] = useState(1); // 1: Choose method, 2: Input contact, 3: Verify OTP\n  const [verificationType, setVerificationType] = useState('phone'); // 'phone' or 'email'\n  const [contact, setContact] = useState('');\n  const [otp, setOtp] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [countdown, setCountdown] = useState(0);\n  const {\n    verifyEmailOTP,\n    verifyPhoneOTP,\n    sendEmailOTP,\n    sendPhoneOTP,\n    currentUser,\n    error: authError\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Redirect if already logged in\n    if (currentUser) {\n      switch (currentUser.role) {\n        case 'doctor':\n          navigate('/doctor-dashboard');\n          break;\n        case 'patient':\n          navigate('/patient-dashboard');\n          break;\n        default:\n          navigate('/dashboard');\n      }\n    }\n  }, [currentUser, navigate]);\n  useEffect(() => {\n    let timer;\n    if (countdown > 0) {\n      timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n    }\n    return () => clearTimeout(timer);\n  }, [countdown]);\n  const handleMethodSelect = method => {\n    setVerificationType(method);\n    setStep(2);\n    setError('');\n  };\n  const handleContactSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccessMessage('');\n\n    // Simple validation\n    if (!contact) {\n      return setError(verificationType === 'email' ? 'Please enter your email' : 'Please enter your phone number');\n    }\n    if (verificationType === 'email') {\n      const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if (!emailRegex.test(contact)) {\n        return setError('Please enter a valid email address');\n      }\n    } else {\n      // Simple phone validation\n      if (contact.length < 10) {\n        return setError('Please enter a valid phone number');\n      }\n    }\n    try {\n      setLoading(true);\n      let success;\n      if (verificationType === 'email') {\n        success = await sendEmailOTP(contact);\n      } else {\n        success = await sendPhoneOTP(contact);\n      }\n      if (!success) {\n        if (authError) {\n          throw new Error(authError);\n        } else {\n          throw new Error('Failed to send verification code');\n        }\n      }\n      setSuccessMessage('Verification code sent successfully');\n      setStep(3);\n      setCountdown(60); // 60 seconds countdown for resend\n    } catch (err) {\n      setError(err.message || 'Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleOtpSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    // Simple validation\n    if (!otp) {\n      return setError('Please enter the verification code');\n    }\n    try {\n      setLoading(true);\n      let success;\n      if (verificationType === 'email') {\n        success = await verifyEmailOTP(contact, otp);\n      } else {\n        success = await verifyPhoneOTP(contact, otp);\n      }\n      if (!success) {\n        if (authError) {\n          throw new Error(authError);\n        } else {\n          throw new Error('Invalid verification code');\n        }\n      }\n      setSuccessMessage('Verification successful');\n    } catch (err) {\n      setError(err.message || 'Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleResendOTP = async () => {\n    if (countdown > 0) return;\n    try {\n      setLoading(true);\n      setError('');\n      let success;\n      if (verificationType === 'email') {\n        success = await sendEmailOTP(contact);\n      } else {\n        success = await sendPhoneOTP(contact);\n      }\n      if (!success) {\n        if (authError) {\n          throw new Error(authError);\n        } else {\n          throw new Error('Failed to resend verification code');\n        }\n      }\n      setSuccessMessage('Verification code resent successfully');\n      setCountdown(60); // Reset countdown\n    } catch (err) {\n      setError(err.message || 'Failed to resend verification code');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to fill test account credentials\n  const fillTestContact = type => {\n    if (type === 'phone') {\n      setVerificationType('phone');\n      setContact('9876543210'); // Alex's phone\n    } else if (type === 'email') {\n      setVerificationType('email');\n      setContact('alex@example.com'); // Alex's email\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login with OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-alert\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 28\n      }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"method-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose verification method:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"method-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"method-button phone-method\",\n            onClick: () => handleMethodSelect('phone'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"method-icon\",\n              children: \"\\uD83D\\uDCF1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"method-button email-method\",\n            onClick: () => handleMethodSelect('email'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"method-icon\",\n              children: \"\\u2709\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Remember your password? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login with Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-accounts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Test Accounts:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-type\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill-test-account\",\n              onClick: () => fillTestContact('email'),\n              children: \"Use Test Email (alex@example.com)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-type\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill-test-account\",\n              onClick: () => fillTestContact('phone'),\n              children: \"Use Test Phone (9876543210)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"test-note\",\n            children: \"In dev mode, any 6-digit OTP will work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleContactSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contact\",\n            children: verificationType === 'email' ? 'Email Address' : 'Phone Number'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: verificationType === 'email' ? 'email' : 'tel',\n            id: \"contact\",\n            value: contact,\n            onChange: e => setContact(e.target.value),\n            placeholder: verificationType === 'email' ? 'Enter your email' : 'Enter your phone number'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          disabled: loading,\n          children: loading ? 'Sending...' : 'Send Verification Code'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"back-option\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"back-button\",\n            onClick: () => setStep(1),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleOtpSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"otp-info\",\n          children: verificationType === 'email' ? `We've sent a verification code to ${contact}` : `We've sent a verification code to ${contact}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"otp\",\n            children: \"Verification Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"otp\",\n            value: otp,\n            onChange: e => setOtp(e.target.value),\n            placeholder: \"Enter 6-digit code\",\n            maxLength: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          disabled: loading,\n          children: loading ? 'Verifying...' : 'Verify & Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resend-otp\",\n          children: countdown > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Resend code in \", countdown, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleResendOTP,\n            className: \"resend-button\",\n            disabled: loading,\n            children: \"Resend Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"back-option\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"back-button\",\n            onClick: () => setStep(2),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-accounts\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"test-note\",\n            children: \"In dev mode, any 6-digit OTP will work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fill-test-account\",\n            onClick: () => setOtp('123456'),\n            children: \"Use Test OTP (123456)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(PhoneLogin, \"otgQbyhiY49/CuSoaZTddd7kpzg=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = PhoneLogin;\nexport default PhoneLogin;\nvar _c;\n$RefreshReg$(_c, \"PhoneLogin\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useAuth","jsxDEV","_jsxDEV","PhoneLogin","_s","step","setStep","verificationType","setVerificationType","contact","setContact","otp","setOtp","loading","setLoading","error","setError","successMessage","setSuccessMessage","countdown","setCountdown","verifyEmailOTP","verifyPhoneOTP","sendEmailOTP","sendPhoneOTP","currentUser","authError","navigate","role","timer","setTimeout","clearTimeout","handleMethodSelect","method","handleContactSubmit","e","preventDefault","emailRegex","test","length","success","Error","err","message","handleOtpSubmit","handleResendOTP","fillTestContact","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","onSubmit","htmlFor","id","value","onChange","target","placeholder","disabled","maxLength","_c","$RefreshReg$"],"sources":["C:/Users/mrafa/OneDrive/Desktop/code/major project/src/pages/PhoneLogin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport '../styles/PhoneLogin.css';\r\n\r\nconst PhoneLogin = () => {\r\n  const [step, setStep] = useState(1); // 1: Choose method, 2: Input contact, 3: Verify OTP\r\n  const [verificationType, setVerificationType] = useState('phone'); // 'phone' or 'email'\r\n  const [contact, setContact] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [countdown, setCountdown] = useState(0);\r\n  \r\n  const { verifyEmailOTP, verifyPhoneOTP, sendEmailOTP, sendPhoneOTP, currentUser, error: authError } = useAuth();\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect(() => {\r\n    // Redirect if already logged in\r\n    if (currentUser) {\r\n      switch (currentUser.role) {\r\n        case 'doctor':\r\n          navigate('/doctor-dashboard');\r\n          break;\r\n        case 'patient':\r\n          navigate('/patient-dashboard');\r\n          break;\r\n        default:\r\n          navigate('/dashboard');\r\n      }\r\n    }\r\n  }, [currentUser, navigate]);\r\n  \r\n  useEffect(() => {\r\n    let timer;\r\n    if (countdown > 0) {\r\n      timer = setTimeout(() => setCountdown(countdown - 1), 1000);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [countdown]);\r\n  \r\n  const handleMethodSelect = (method) => {\r\n    setVerificationType(method);\r\n    setStep(2);\r\n    setError('');\r\n  };\r\n  \r\n  const handleContactSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccessMessage('');\r\n    \r\n    // Simple validation\r\n    if (!contact) {\r\n      return setError(verificationType === 'email' \r\n        ? 'Please enter your email' \r\n        : 'Please enter your phone number');\r\n    }\r\n    \r\n    if (verificationType === 'email') {\r\n      const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n      if (!emailRegex.test(contact)) {\r\n        return setError('Please enter a valid email address');\r\n      }\r\n    } else {\r\n      // Simple phone validation\r\n      if (contact.length < 10) {\r\n        return setError('Please enter a valid phone number');\r\n      }\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      let success;\r\n      if (verificationType === 'email') {\r\n        success = await sendEmailOTP(contact);\r\n      } else {\r\n        success = await sendPhoneOTP(contact);\r\n      }\r\n      \r\n      if (!success) {\r\n        if (authError) {\r\n          throw new Error(authError);\r\n        } else {\r\n          throw new Error('Failed to send verification code');\r\n        }\r\n      }\r\n      \r\n      setSuccessMessage('Verification code sent successfully');\r\n      setStep(3);\r\n      setCountdown(60); // 60 seconds countdown for resend\r\n      \r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleOtpSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    // Simple validation\r\n    if (!otp) {\r\n      return setError('Please enter the verification code');\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      let success;\r\n      if (verificationType === 'email') {\r\n        success = await verifyEmailOTP(contact, otp);\r\n      } else {\r\n        success = await verifyPhoneOTP(contact, otp);\r\n      }\r\n      \r\n      if (!success) {\r\n        if (authError) {\r\n          throw new Error(authError);\r\n        } else {\r\n          throw new Error('Invalid verification code');\r\n        }\r\n      }\r\n      \r\n      setSuccessMessage('Verification successful');\r\n      \r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleResendOTP = async () => {\r\n    if (countdown > 0) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      let success;\r\n      if (verificationType === 'email') {\r\n        success = await sendEmailOTP(contact);\r\n      } else {\r\n        success = await sendPhoneOTP(contact);\r\n      }\r\n      \r\n      if (!success) {\r\n        if (authError) {\r\n          throw new Error(authError);\r\n        } else {\r\n          throw new Error('Failed to resend verification code');\r\n        }\r\n      }\r\n      \r\n      setSuccessMessage('Verification code resent successfully');\r\n      setCountdown(60); // Reset countdown\r\n      \r\n    } catch (err) {\r\n      setError(err.message || 'Failed to resend verification code');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to fill test account credentials\r\n  const fillTestContact = (type) => {\r\n    if (type === 'phone') {\r\n      setVerificationType('phone');\r\n      setContact('9876543210'); // Alex's phone\r\n    } else if (type === 'email') {\r\n      setVerificationType('email');\r\n      setContact('alex@example.com'); // Alex's email\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <div className=\"login-header\">\r\n          <h2>Login with OTP</h2>\r\n        </div>\r\n        \r\n        {error && <div className=\"error-alert\">{error}</div>}\r\n        {successMessage && <div className=\"success-alert\">{successMessage}</div>}\r\n        \r\n        {step === 1 && (\r\n          <div className=\"method-selection\">\r\n            <p>Choose verification method:</p>\r\n            <div className=\"method-buttons\">\r\n              <button \r\n                type=\"button\"\r\n                className=\"method-button phone-method\"\r\n                onClick={() => handleMethodSelect('phone')}\r\n              >\r\n                <span className=\"method-icon\">📱</span>\r\n                <span>Phone Number</span>\r\n              </button>\r\n              <button \r\n                type=\"button\"\r\n                className=\"method-button email-method\"\r\n                onClick={() => handleMethodSelect('email')}\r\n              >\r\n                <span className=\"method-icon\">✉️</span>\r\n                <span>Email</span>\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"login-footer\">\r\n              <p>\r\n                Remember your password? <Link to=\"/login\">Login with Password</Link>\r\n              </p>\r\n              <p>\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>\r\n            </div>\r\n\r\n            {/* Test Account Information */}\r\n            <div className=\"test-accounts\">\r\n              <h3>Test Accounts:</h3>\r\n              <div className=\"account-type\">\r\n                <button \r\n                  className=\"fill-test-account\" \r\n                  onClick={() => fillTestContact('email')}\r\n                >\r\n                  Use Test Email (alex@example.com)\r\n                </button>\r\n              </div>\r\n              <div className=\"account-type\">\r\n                <button \r\n                  className=\"fill-test-account\" \r\n                  onClick={() => fillTestContact('phone')}\r\n                >\r\n                  Use Test Phone (9876543210)\r\n                </button>\r\n              </div>\r\n              <p className=\"test-note\">In dev mode, any 6-digit OTP will work</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {step === 2 && (\r\n          <form className=\"login-form\" onSubmit={handleContactSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"contact\">\r\n                {verificationType === 'email' ? 'Email Address' : 'Phone Number'}\r\n              </label>\r\n              <input\r\n                type={verificationType === 'email' ? 'email' : 'tel'}\r\n                id=\"contact\"\r\n                value={contact}\r\n                onChange={(e) => setContact(e.target.value)}\r\n                placeholder={verificationType === 'email' ? 'Enter your email' : 'Enter your phone number'}\r\n              />\r\n            </div>\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              className=\"login-button\" \r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Sending...' : 'Send Verification Code'}\r\n            </button>\r\n            \r\n            <div className=\"back-option\">\r\n              <button \r\n                type=\"button\" \r\n                className=\"back-button\"\r\n                onClick={() => setStep(1)}\r\n              >\r\n                Back\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n        \r\n        {step === 3 && (\r\n          <form className=\"login-form\" onSubmit={handleOtpSubmit}>\r\n            <p className=\"otp-info\">\r\n              {verificationType === 'email' \r\n                ? `We've sent a verification code to ${contact}`\r\n                : `We've sent a verification code to ${contact}`\r\n              }\r\n            </p>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"otp\">Verification Code</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"otp\"\r\n                value={otp}\r\n                onChange={(e) => setOtp(e.target.value)}\r\n                placeholder=\"Enter 6-digit code\"\r\n                maxLength={6}\r\n              />\r\n            </div>\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              className=\"login-button\" \r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Verifying...' : 'Verify & Login'}\r\n            </button>\r\n            \r\n            <div className=\"resend-otp\">\r\n              {countdown > 0 ? (\r\n                <p>Resend code in {countdown} seconds</p>\r\n              ) : (\r\n                <button \r\n                  type=\"button\" \r\n                  onClick={handleResendOTP} \r\n                  className=\"resend-button\"\r\n                  disabled={loading}\r\n                >\r\n                  Resend Code\r\n                </button>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"back-option\">\r\n              <button \r\n                type=\"button\" \r\n                className=\"back-button\"\r\n                onClick={() => setStep(2)}\r\n              >\r\n                Back\r\n              </button>\r\n            </div>\r\n\r\n            {/* For dev testing */}\r\n            <div className=\"test-accounts\">\r\n              <p className=\"test-note\">In dev mode, any 6-digit OTP will work</p>\r\n              <button \r\n                className=\"fill-test-account\" \r\n                onClick={() => setOtp('123456')}\r\n              >\r\n                Use Test OTP (123456)\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhoneLogin; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}